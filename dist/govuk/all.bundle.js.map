{"version":3,"file":"all.bundle.js","sources":["../../src/govuk/common/govuk-frontend-version.mjs","../../src/govuk/common/normalise-string.mjs","../../src/govuk/common/index.mjs","../../src/govuk/common/normalise-dataset.mjs","../../src/govuk/errors/index.mjs","../../src/govuk/govuk-frontend-component.mjs","../../src/govuk/i18n.mjs","../../src/govuk/components/accordion/accordion.mjs","../../src/govuk/components/button/button.mjs","../../src/govuk/common/closest-attribute-value.mjs","../../src/govuk/components/character-count/character-count.mjs","../../src/govuk/components/checkboxes/checkboxes.mjs","../../src/govuk/components/error-summary/error-summary.mjs","../../src/govuk/components/exit-this-page/exit-this-page.mjs","../../src/govuk/components/header/header.mjs","../../src/govuk/components/notification-banner/notification-banner.mjs","../../src/govuk/components/password-input/password-input.mjs","../../src/govuk/components/radios/radios.mjs","../../src/govuk/components/service-navigation/service-navigation.mjs","../../src/govuk/components/skip-link/skip-link.mjs","../../src/govuk/components/tabs/tabs.mjs","../../src/govuk/init.mjs"],"sourcesContent":["/*\n * This variable is automatically overwritten during builds and releases.\n * It doesn't need to be updated manually.\n */\n\n/**\n * GOV.UK Frontend release version\n *\n * {@link https://github.com/alphagov/govuk-frontend/releases}\n */\nexport const version = 'development'\n","/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {DOMStringMap[string]} value - The value to normalise\n * @param {SchemaProperty} [property] - Component schema property\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString(value, property) {\n  const trimmedValue = value ? value.trim() : ''\n\n  let output\n  let outputType = property?.type\n\n  // No schema type set? Determine automatically\n  if (!outputType) {\n    if (['true', 'false'].includes(trimmedValue)) {\n      outputType = 'boolean'\n    }\n\n    // Empty / whitespace-only strings are considered finite so we need to check\n    // the length of the trimmed string as well\n    if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n      outputType = 'number'\n    }\n  }\n\n  switch (outputType) {\n    case 'boolean':\n      output = trimmedValue === 'true'\n      break\n\n    case 'number':\n      output = Number(trimmedValue)\n      break\n\n    default:\n      output = value\n  }\n\n  return output\n}\n\n/**\n * @typedef {import('./index.mjs').SchemaProperty} SchemaProperty\n */\n","import { normaliseString } from './normalise-string.mjs'\n\n/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns {{ [key: string]: unknown }} A merged config object\n */\nexport function mergeConfigs(...configObjects) {\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (isObject(option) && isObject(override)) {\n        // @ts-expect-error Index signature for type 'string' is missing\n        formattedConfigObject[key] = mergeConfigs(option, override)\n      } else {\n        // Apply override\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Extracts keys starting with a particular namespace from dataset ('data-*')\n * object, removing the namespace in the process, normalising all values\n *\n * @internal\n * @param {{ schema: Schema }} Component - Component class\n * @param {DOMStringMap} dataset - The object to extract key-value pairs from\n * @param {string} namespace - The namespace to filter keys with\n * @returns {ObjectNested | undefined} Nested object with dot-separated key namespace removed\n */\nexport function extractConfigByNamespace(Component, dataset, namespace) {\n  const property = Component.schema.properties[namespace]\n\n  // Only extract configs for object schema properties\n  if (property?.type !== 'object') {\n    return\n  }\n\n  // Add default empty config\n  const newObject = {\n    [namespace]: /** @type {ObjectNested} */ ({})\n  }\n\n  for (const [key, value] of Object.entries(dataset)) {\n    /** @type {ObjectNested | ObjectNested[NestedKey]} */\n    let current = newObject\n\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n\n    /**\n     * Create new level per part\n     *\n     * e.g. 'i18n.textareaDescription.other' becomes\n     * `{ i18n: { textareaDescription: { other } } }`\n     */\n    for (const [index, name] of keyParts.entries()) {\n      if (typeof current === 'object') {\n        // Drop down to nested object until the last part\n        if (index < keyParts.length - 1) {\n          // New nested object (optionally) replaces existing value\n          if (!isObject(current[name])) {\n            current[name] = {}\n          }\n\n          // Drop down into new or existing nested object\n          current = current[name]\n        } else if (key !== namespace) {\n          // Normalised value (optionally) replaces existing value\n          current[name] = normaliseString(value)\n        }\n      }\n    }\n  }\n\n  return newObject[namespace]\n}\n\n/**\n * Get hash fragment from URL\n *\n * Extract the hash fragment (everything after the hash) from a URL,\n * but not including the hash symbol\n *\n * @private\n * @param {string} url - URL\n * @returns {string | undefined} Fragment from URL, without the hash\n */\nexport function getFragmentFromUrl(url) {\n  if (!url.includes('#')) {\n    return undefined\n  }\n\n  return url.split('#').pop()\n}\n\n/**\n * Get GOV.UK Frontend breakpoint value from CSS custom property\n *\n * @private\n * @param {string} name - Breakpoint name\n * @returns {{ property: string, value?: string }} Breakpoint object\n */\nexport function getBreakpoint(name) {\n  const property = `--govuk-frontend-breakpoint-${name}`\n\n  // Get value from `<html>` with breakpoints on CSS :root\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(property)\n\n  return {\n    property,\n    value: value || undefined\n  }\n}\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * @private\n * @template {HTMLElement} FocusElement\n * @param {FocusElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: FocusElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: FocusElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.addEventListener('blur', onBlur, { once: true })\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    options.onBlur?.call($element)\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus, { once: true })\n\n  // Focus element\n  options.onBeforeFocus?.call($element)\n  $element.focus()\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @internal\n * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  if (!$scope) {\n    return false\n  }\n\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Validate component config by schema\n *\n * Follows limited examples in JSON schema for wider support in future\n *\n * {@link https://ajv.js.org/json-schema.html#compound-keywords}\n * {@link https://ajv.js.org/packages/ajv-errors.html#single-message}\n *\n * @internal\n * @param {Schema} schema - Config schema\n * @param {{ [key: string]: unknown }} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    if (Array.isArray(conditions)) {\n      for (const { required, errorMessage } of conditions) {\n        if (!required.every((key) => !!config[key])) {\n          errors.push(errorMessage) // Missing config key value\n        }\n      }\n\n      // Check one condition passes or add errors\n      if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n        validationErrors.push(...errors)\n      }\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Check for an array\n *\n * @internal\n * @param {unknown} option - Option to check\n * @returns {boolean} Whether the option is an array\n */\nfunction isArray(option) {\n  return Array.isArray(option)\n}\n\n/**\n * Check for an object\n *\n * @internal\n * @param {unknown} option - Option to check\n * @returns {boolean} Whether the option is an object\n */\nfunction isObject(option) {\n  return !!option && typeof option === 'object' && !isArray(option)\n}\n\n/**\n * Schema for component config\n *\n * @typedef {object} Schema\n * @property {{ [field: string]: SchemaProperty | undefined }} properties - Schema properties\n * @property {SchemaCondition[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n\n/**\n * Schema condition for component config\n *\n * @typedef {object} SchemaCondition\n * @property {string[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @internal\n * @typedef {keyof ObjectNested} NestedKey\n * @typedef {{ [key: string]: string | boolean | number | ObjectNested | undefined }} ObjectNested\n */\n","import { extractConfigByNamespace } from './index.mjs'\nimport { normaliseString } from './normalise-string.mjs'\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using {@link normaliseString},\n * optionally expanding nested `i18n.field`\n *\n * @internal\n * @param {{ schema: Schema }} Component - Component class\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {ObjectNested} Normalised dataset\n */\nexport function normaliseDataset(Component, dataset) {\n  const out = /** @type {ReturnType<typeof normaliseDataset>} */ ({})\n\n  // Normalise top-level dataset ('data-*') values using schema types\n  for (const [field, property] of Object.entries(Component.schema.properties)) {\n    if (field in dataset) {\n      out[field] = normaliseString(dataset[field], property)\n    }\n\n    /**\n     * Extract and normalise nested object values automatically using\n     * {@link normaliseString} but only schema object types are allowed\n     */\n    if (property?.type === 'object') {\n      out[field] = extractConfigByNamespace(Component, dataset, field)\n    }\n  }\n\n  return out\n}\n\n/**\n * @internal\n * @typedef {import('./index.mjs').ObjectNested} ObjectNested\n * @typedef {import('./index.mjs').Schema} Schema\n */\n","/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @virtual\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  /**\n   * Checks if GOV.UK Frontend is supported on this page\n   *\n   * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n   */\n  constructor($scope = document.body) {\n    const supportMessage =\n      'noModule' in HTMLScriptElement.prototype\n        ? 'GOV.UK Frontend initialised without `<body class=\"govuk-frontend-supported\">` from template `<script>` snippet'\n        : 'GOV.UK Frontend is not supported in this browser'\n\n    super(\n      $scope\n        ? supportMessage\n        : 'GOV.UK Frontend initialised without `<script type=\"module\">`'\n    )\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @internal\n   * @overload\n   * @param {string} message - Element error message\n   */\n\n  /**\n   * @internal\n   * @overload\n   * @param {ElementErrorOptions} options - Element error options\n   */\n\n  /**\n   * @internal\n   * @param {string | ElementErrorOptions} messageOrOptions - Element error message or options\n   */\n  constructor(messageOrOptions) {\n    let message = typeof messageOrOptions === 'string' ? messageOrOptions : ''\n\n    // Build message from options\n    if (typeof messageOrOptions === 'object') {\n      const { componentName, identifier, element, expectedType } =\n        messageOrOptions\n\n      // Add prefix and identifier\n      message = `${componentName}: ${identifier}`\n\n      // Append reason\n      message += element\n        ? ` is not of type ${expectedType ?? 'HTMLElement'}`\n        : ' not found'\n    }\n\n    super(message)\n  }\n}\n\n/**\n * Element error options\n *\n * @internal\n * @typedef {object} ElementErrorOptions\n * @property {string} componentName - The name of the component throwing the error\n * @property {string} identifier - An identifier that'll let the user understand which element has an error. This is whatever makes the most sense\n * @property {Element | null} [element] - The element in error\n * @property {string} [expectedType] - The type that was expected for the identifier\n */\n","import { isSupported } from './common/index.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @internal\n * @virtual\n */\nexport class GOVUKFrontendComponent {\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   */\n  constructor() {\n    this.checkSupport()\n  }\n\n  /**\n   * Validates whether GOV.UK Frontend is supported\n   *\n   * @private\n   * @throws {SupportError} when GOV.UK Frontend is not supported\n   */\n  checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n","/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @internal\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @internal\n   * @param {{ [key: string]: string | TranslationPluralForms }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string | null} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations = {}, config = {}) {\n    // Make list of translations available throughout function\n    this.translations = translations\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale = config.locale ?? (document.documentElement.lang || 'en')\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // Fetch the translation for that lookup key\n    let translation = this.translations[lookupKey]\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (typeof options?.count === 'number' && typeof translation === 'object') {\n      const translationPluralForm =\n        translation[this.getPluralSuffix(lookupKey, options.count)]\n\n      // Update translation with plural suffix\n      if (translationPluralForm) {\n        translation = translationPluralForm\n      }\n    }\n\n    if (typeof translation === 'string') {\n      // Check for ${} placeholders in the translation string\n      if (translation.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translation, options)\n      }\n\n      return translation\n    }\n\n    // If the key wasn't found in our translations object,\n    // return the lookup key itself as the fallback\n    return lookupKey\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @internal\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    const formatter = Intl.NumberFormat.supportedLocalesOf(this.locale).length\n      ? new Intl.NumberFormat(this.locale)\n      : undefined\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @internal\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        }\n\n        throw new Error(\n          `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n        )\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl.PluralRules\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The implementation of Intl supports PluralRules (NOT true in Safari 10â€“12)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * {@link https://browsersl.ist/#q=supports+es6-module+and+not+supports+intl-pluralrules}\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form â€“ if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    // Fetch the translation for that lookup key\n    const translation = this.translations[lookupKey]\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    const preferredForm = this.hasIntlPluralRulesSupport()\n      ? new Intl.PluralRules(this.locale).select(count)\n      : this.selectPluralFormUsingFallbackRules(count)\n\n    // Use the correct plural form if provided\n    if (typeof translation === 'object') {\n      if (preferredForm in translation) {\n        return preferredForm\n        // Fall back to `other` if the plural form is missing, but log a warning\n        // to the console\n      } else if ('other' in translation) {\n        console.warn(\n          `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n        )\n\n        return 'other'\n      }\n    }\n\n    // If the required `other` plural form is missing, all we can do is error\n    throw new Error(\n      `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n    )\n  }\n\n  /**\n   * Get the plural form using our fallback implementation\n   *\n   * This is split out into a separate function to make it easier to test the\n   * fallback behaviour in an environment where Intl.PluralRules exists.\n   *\n   * @internal\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The pluralisation form for count in this locale.\n   */\n  selectPluralFormUsingFallbackRules(count) {\n    // Currently our custom code can only handle positive integers, so let's\n    // make sure our number is one of those.\n    count = Math.abs(Math.floor(count))\n\n    const ruleset = this.getPluralRulesForLocale()\n\n    if (ruleset) {\n      return I18n.pluralRules[ruleset](count)\n    }\n\n    return 'other'\n  }\n\n  /**\n   * Work out which pluralisation rules to use for the current locale\n   *\n   * The locale may include a regional indicator (such as en-GB), but we don't\n   * usually care about this part, as pluralisation rules are usually the same\n   * regardless of region. There are exceptions, however, (e.g. Portuguese) so\n   * this searches by both the full and shortened locale codes, just to be sure.\n   *\n   * @internal\n   * @returns {string | undefined} The name of the pluralisation rule to use (a key for one\n   *   of the functions in this.pluralRules)\n   */\n  getPluralRulesForLocale() {\n    const localeShort = this.locale.split('-')[0]\n\n    // Look through the plural rules map to find which `pluralRule` is\n    // appropriate for our current `locale`.\n    for (const pluralRule in I18n.pluralRulesMap) {\n      const languages = I18n.pluralRulesMap[pluralRule]\n      if (languages.includes(this.locale) || languages.includes(localeShort)) {\n        return pluralRule\n      }\n    }\n  }\n\n  /**\n   * Map of plural rules to languages where those rules apply.\n   *\n   * Note: These groups are named for the most dominant or recognisable language\n   * that uses each system. The groupings do not imply that the languages are\n   * related to one another. Many languages have evolved the same systems\n   * independently of one another.\n   *\n   * Code to support more languages can be found in the i18n spike:\n   * {@link https://github.com/alphagov/govuk-frontend/blob/spike-i18n-support/src/govuk/i18n.mjs}\n   *\n   * Languages currently supported:\n   *\n   * Arabic: Arabic (ar)\n   * Chinese: Burmese (my), Chinese (zh), Indonesian (id), Japanese (ja),\n   *   Javanese (jv), Korean (ko), Malay (ms), Thai (th), Vietnamese (vi)\n   * French: Armenian (hy), Bangla (bn), French (fr), Gujarati (gu), Hindi (hi),\n   *   Persian Farsi (fa), Punjabi (pa), Zulu (zu)\n   * German: Afrikaans (af), Albanian (sq), Azerbaijani (az), Basque (eu),\n   *   Bulgarian (bg), Catalan (ca), Danish (da), Dutch (nl), English (en),\n   *   Estonian (et), Finnish (fi), Georgian (ka), German (de), Greek (el),\n   *   Hungarian (hu), Luxembourgish (lb), Norwegian (no), Somali (so),\n   *   Swahili (sw), Swedish (sv), Tamil (ta), Telugu (te), Turkish (tr),\n   *   Urdu (ur)\n   * Irish: Irish Gaelic (ga)\n   * Russian: Russian (ru), Ukrainian (uk)\n   * Scottish: Scottish Gaelic (gd)\n   * Spanish: European Portuguese (pt-PT), Italian (it), Spanish (es)\n   * Welsh: Welsh (cy)\n   *\n   * @internal\n   * @type {{ [key: string]: string[] }}\n   */\n  static pluralRulesMap = {\n    arabic: ['ar'],\n    chinese: ['my', 'zh', 'id', 'ja', 'jv', 'ko', 'ms', 'th', 'vi'],\n    french: ['hy', 'bn', 'fr', 'gu', 'hi', 'fa', 'pa', 'zu'],\n    german: [\n      'af',\n      'sq',\n      'az',\n      'eu',\n      'bg',\n      'ca',\n      'da',\n      'nl',\n      'en',\n      'et',\n      'fi',\n      'ka',\n      'de',\n      'el',\n      'hu',\n      'lb',\n      'no',\n      'so',\n      'sw',\n      'sv',\n      'ta',\n      'te',\n      'tr',\n      'ur'\n    ],\n    irish: ['ga'],\n    russian: ['ru', 'uk'],\n    scottish: ['gd'],\n    spanish: ['pt-PT', 'it', 'es'],\n    welsh: ['cy']\n  }\n\n  /**\n   * Different pluralisation rule sets\n   *\n   * Returns the appropriate suffix for the plural form associated with `n`.\n   * Possible suffixes: 'zero', 'one', 'two', 'few', 'many', 'other' (the actual\n   * meaning of each differs per locale). 'other' should always exist, even in\n   * languages without plurals, such as Chinese.\n   * {@link https://cldr.unicode.org/index/cldr-spec/plural-rules}\n   *\n   * The count must be a positive integer. Negative numbers and decimals aren't accounted for\n   *\n   * @internal\n   * @type {{ [key: string]: (count: number) => PluralRule }}\n   */\n  static pluralRules = {\n    arabic(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n % 100 >= 3 && n % 100 <= 10) {\n        return 'few'\n      }\n      if (n % 100 >= 11 && n % 100 <= 99) {\n        return 'many'\n      }\n      return 'other'\n    },\n    chinese() {\n      return 'other'\n    },\n    french(n) {\n      return n === 0 || n === 1 ? 'one' : 'other'\n    },\n    german(n) {\n      return n === 1 ? 'one' : 'other'\n    },\n    irish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n >= 3 && n <= 6) {\n        return 'few'\n      }\n      if (n >= 7 && n <= 10) {\n        return 'many'\n      }\n      return 'other'\n    },\n    russian(n) {\n      const lastTwo = n % 100\n      const last = lastTwo % 10\n      if (last === 1 && lastTwo !== 11) {\n        return 'one'\n      }\n      if (last >= 2 && last <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {\n        return 'few'\n      }\n      if (\n        last === 0 ||\n        (last >= 5 && last <= 9) ||\n        (lastTwo >= 11 && lastTwo <= 14)\n      ) {\n        return 'many'\n      }\n      // Note: The 'other' suffix is only used by decimal numbers in Russian.\n      // We don't anticipate it being used, but it's here for consistency.\n      return 'other'\n    },\n    scottish(n) {\n      if (n === 1 || n === 11) {\n        return 'one'\n      }\n      if (n === 2 || n === 12) {\n        return 'two'\n      }\n      if ((n >= 3 && n <= 10) || (n >= 13 && n <= 19)) {\n        return 'few'\n      }\n      return 'other'\n    },\n    spanish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n % 1000000 === 0 && n !== 0) {\n        return 'many'\n      }\n      return 'other'\n    },\n    welsh(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n === 3) {\n        return 'few'\n      }\n      if (n === 6) {\n        return 'many'\n      }\n      return 'other'\n    }\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @internal\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @internal\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n */\nexport class Accordion extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {AccordionConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Accordion.defaults,\n      config,\n      normaliseDataset(Accordion, $module.dataset)\n    )\n\n    this.i18n = new I18n(this.config.i18n)\n\n    const $sections = this.$module.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Sections (\\`<div class=\"${this.sectionClass}\">\\`)`\n      })\n    }\n\n    this.$sections = $sections\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        throw new ElementError({\n          componentName: 'Accordion',\n          identifier: `Section headers (\\`<div class=\"${this.sectionHeaderClass}\">\\`)`\n        })\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections\n      // to open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$heading) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section heading (\\`.${this.sectionHeadingClass}\\`)`\n      })\n    }\n\n    if (!$span) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section button placeholder (\\`<span class=\"${this.sectionButtonClass}\">\\`)`\n      })\n    }\n\n    // Create a button element that will replace the\n    // '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$module.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes from $span to $button (except `id`, which gets added\n    // to the `$headingText` element)\n    for (const attr of Array.from($span.attributes)) {\n      if (attr.name !== 'id') {\n        $button.setAttribute(attr.name, attr.value)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by\n    // `aria-labelledby` on the hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus\n    // state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements\n    // (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    Array.from($span.childNodes).forEach(($child) =>\n      $headingTextFocus.appendChild($child)\n    )\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading. Must be\n    // set on the element before it's added to the DOM.\n    // See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the\n      // original `div` to the new `span`. This is because the summary line text\n      // is now inside a button element, which can only contain phrasing\n      // content.\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary\n      // focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (const attr of Array.from($summary.attributes)) {\n        $summarySpan.setAttribute(attr.name, attr.value)\n      }\n\n      // Copy original contents of summary to the new summary span\n      Array.from($summary.childNodes).forEach(($child) =>\n        $summarySpanFocus.appendChild($child)\n      )\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.remove()\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const nowExpanded = !this.isExpanded($section)\n    this.setExpanded(nowExpanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section, nowExpanded)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.areAllSectionsOpen()\n\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      this.storeState($section, nowExpanded)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$content) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section content (\\`<div class=\"${this.sectionContentClass}\">\\`)`\n      })\n    }\n\n    if (!$showHideIcon || !$showHideText || !$button) {\n      // Return early for elements we create\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText) {\n      ariaLabelParts.push(`${$headingText.textContent}`.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary) {\n      ariaLabelParts.push(`${$summary.textContent}`.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  areAllSectionsOpen() {\n    return Array.from(this.$sections).every(($section) =>\n      this.isExpanded($section)\n    )\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    if (!this.$showAllButton || !this.$showAllText || !this.$showAllIcon) {\n      return\n    }\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n    this.$showAllIcon.classList.toggle(this.downChevronIconClass, !expanded)\n  }\n\n  /**\n   * Get the identifier for a section\n   *\n   * We need a unique way of identifying each content in the Accordion.\n   * Since an `#id` should be unique and an `id` is required for `aria-`\n   * attributes `id` can be safely used.\n   *\n   * @param {Element} $section - Section element\n   * @returns {string | undefined | null} Identifier for section\n   */\n  getIdentifier($section) {\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n    return $button?.getAttribute('aria-controls')\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @param {boolean} isExpanded - Whether the section is expanded\n   */\n  storeState($section, isExpanded) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        window.sessionStorage.setItem(id, isExpanded.toString())\n      } catch (exception) {}\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        const state = window.sessionStorage.getItem(id)\n\n        if (state !== null) {\n          this.setExpanded(state === 'true', $section)\n        }\n      } catch (exception) {}\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with\n   * punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by\n   * dividing its contents into thematic chunks. See\n   * https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.textContent = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n\n  /**\n   * Accordion config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      rememberExpanded: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n */\nexport class Button extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ButtonConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Button',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Button.defaults,\n      config,\n      normaliseDataset(Button, $module.dataset)\n    )\n\n    this.$module.addEventListener('keydown', (event) =>\n      this.handleKeyDown(event)\n    )\n    this.$module.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.key !== ' ') {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n\n  /**\n   * Button config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      preventDoubleClick: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n","/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @internal\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { mergeConfigs, validateConfig } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @preserve\n */\nexport class CharacterCount extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $textarea\n\n  /** @private */\n  $visibleCountMessage\n\n  /** @private */\n  $screenReaderCountMessage\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n\n  /** @private */\n  lastInputValue = ''\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /**\n   * @private\n   * @type {CharacterCountConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  maxLength\n\n  /**\n   * @param {Element | null} $module - HTML element to use for character count\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Character count',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $textarea = $module.querySelector('.govuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      throw new ElementError({\n        componentName: 'Character count',\n        element: $textarea,\n        expectedType: 'HTMLTextareaElement or HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-character-count`)'\n      })\n    }\n\n    // Read config set using dataset ('data-' values)\n    const datasetConfig = normaliseDataset(CharacterCount, $module.dataset)\n\n    // To ensure data-attributes take complete precedence, even if they change\n    // the type of count, we need to reset the `maxlength` and `maxwords` from\n    // the JavaScript config.\n    //\n    // We can't mutate `config`, though, as it may be shared across multiple\n    // components inside `initAll`.\n    /** @type {CharacterCountConfig} */\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    this.config = mergeConfigs(\n      CharacterCount.defaults,\n      config,\n      configOverrides,\n      datasetConfig\n    )\n\n    // Check for valid config\n    const errors = validateConfig(CharacterCount.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(`Character count: ${errors[0]}`)\n    }\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue($module, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    this.maxLength = this.config.maxwords ?? this.config.maxlength ?? Infinity\n\n    this.$module = $module\n    this.$textarea = $textarea\n\n    const textareaDescriptionId = `${this.$textarea.id}-info`\n    const $textareaDescription = document.getElementById(textareaDescriptionId)\n    if (!$textareaDescription) {\n      throw new ElementError({\n        componentName: 'Character count',\n        element: $textareaDescription,\n        identifier: `Count message (\\`id=\"${textareaDescriptionId}\"\\`)`\n      })\n    }\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    if (`${$textareaDescription.textContent}`.match(/^\\s*$/)) {\n      $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n        count: this.maxLength\n      })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className =\n      'govuk-character-count__sr-status govuk-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement(\n      'afterend',\n      $screenReaderCountMessage\n    )\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('govuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('govuk-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   *\n   * @private\n   */\n  bindChangeEvents() {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   *\n   * @private\n   */\n  handleKeyUp() {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify\n   * the fields by directly changing its `value`. These changes don't trigger\n   * events in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check\n   * if the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   *\n   * @private\n   */\n  handleFocus() {\n    this.valueChecker = window.setInterval(() => {\n      if (\n        !this.lastInputTimestamp ||\n        Date.now() - 500 >= this.lastInputTimestamp\n      ) {\n        this.updateIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   *\n   * @private\n   */\n  handleBlur() {\n    // Cancel value checking on blur\n    if (this.valueChecker) {\n      window.clearInterval(this.valueChecker)\n    }\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   *\n   * @private\n   */\n  updateIfValueChanged() {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   *\n   * @private\n   */\n  updateCountMessage() {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   *\n   * @private\n   */\n  updateVisibleCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const isError = remainingNumber < 0\n\n    // If input is over the threshold, remove the disabled class which renders\n    // the counter invisible.\n    this.$visibleCountMessage.classList.toggle(\n      'govuk-character-count__message--disabled',\n      !this.isOverThreshold()\n    )\n\n    // Update styles\n    this.$textarea.classList.toggle('govuk-textarea--error', isError)\n    this.$visibleCountMessage.classList.toggle('govuk-error-message', isError)\n    this.$visibleCountMessage.classList.toggle('govuk-hint', !isError)\n\n    // Update message\n    this.$visibleCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   *\n   * @private\n   */\n  updateScreenReaderCountMessage() {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @private\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count(text) {\n    if (this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) ?? [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    }\n\n    return text.length\n  }\n\n  /**\n   * Get count message\n   *\n   * @private\n   * @returns {string} Status message\n   */\n  getCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const countType = this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @private\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage(remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix =\n      remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, {\n      count: Math.abs(remainingNumber)\n    })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @private\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold() {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = (maxLength * this.config.threshold) / 100\n\n    return thresholdValue <= currentLength\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-character-count'\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      maxwords: { type: 'number' },\n      maxlength: { type: 'number' },\n      threshold: { type: 'number' }\n    },\n    anyOf: [\n      {\n        required: ['maxwords'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      },\n      {\n        required: ['maxlength'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      }\n    ]\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfig\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n * @typedef {import('../../i18n.mjs').TranslationPluralForms} TranslationPluralForms\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Checkboxes component\n *\n * @preserve\n */\nexport class Checkboxes extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block\n   * â€“ for example, a checkbox for 'Phone' could reveal an additional form field\n   * for the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the checkbox state.\n   *\n   * @param {Element | null} $module - HTML element to use for checkboxes\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Checkboxes',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $inputs = $module.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        componentName: 'Checkboxes',\n        identifier: 'Form inputs (`<input type=\"checkbox\">`)'\n      })\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          componentName: 'Checkboxes',\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-checkboxes__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-checkboxes__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a â€œNone of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept($input) {\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = $input.form === $inputWithSameName.form\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive'\n   * behaviour, and uncheck them. This helps prevent someone checking both a\n   * regular checkbox and a \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs($input) {\n    const allInputsWithSameNameAndExclusiveBehaviour =\n      document.querySelectorAll(\n        `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n      )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = $input.form === $exclusiveInput.form\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a checkbox,\n   * sync the state of any associated conditional reveal with the checkbox\n   * state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'checkbox'\n    ) {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive =\n      $clickedInput.getAttribute('data-behaviour') === 'exclusive'\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-checkboxes'\n}\n","import {\n  getFragmentFromUrl,\n  mergeConfigs,\n  setFocus\n} from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Error summary component\n *\n * Takes focus on initialisation for accessible announcement, unless disabled in\n * configuration.\n *\n * @preserve\n */\nexport class ErrorSummary extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ErrorSummaryConfig}\n   */\n  config\n\n  /**\n   * @param {Element | null} $module - HTML element to use for error summary\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Error summary',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      ErrorSummary.defaults,\n      config,\n      normaliseDataset(ErrorSummary, $module.dataset)\n    )\n\n    /**\n     * Focus the error summary\n     */\n    if (!this.config.disableAutoFocus) {\n      setFocus(this.$module)\n    }\n\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Click event handler\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $target = event.target\n    if ($target && this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our\n   * labels or legends appear above the input, this means the user will be\n   * presented with an input without any context, as the label or legend will be\n   * off the top of the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and\n   * then focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is\n   * announced (e.g. \"Edit, has autocomplete\").\n   *\n   * @private\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = getFragmentFromUrl($target.href)\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input\n    // to avoid extra scrolling in browsers that don't support `preventScroll`\n    // (which at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @private\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no\n   *   associated legend or label can be found\n   */\n  getAssociatedLegendOrLabel($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if\n        // there is one.\n        if (\n          $input instanceof HTMLInputElement &&\n          ($input.type === 'checkbox' || $input.type === 'radio')\n        ) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldsetâ€™s legend (instead\n        // of the label associated with the input) if the input would end up in\n        // the top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return (\n      document.querySelector(`label[for='${$input.getAttribute('id')}']`) ??\n      $input.closest('label')\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-error-summary'\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Error summary config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Error summary config\n *\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Exit this page component\n *\n * @preserve\n */\nexport class ExitThisPage extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ExitThisPageConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  $button\n\n  /**\n   * @private\n   * @type {HTMLAnchorElement | null}\n   */\n  $skiplinkButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $updateSpan = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $indicatorContainer = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $overlay = null\n\n  /** @private */\n  keypressCounter = 0\n\n  /** @private */\n  lastKeyWasModified = false\n\n  /** @private */\n  timeoutTime = 5000 // milliseconds\n\n  // Store the timeout events so that we can clear them to avoid user keypresses overlapping\n  // setTimeout returns an id that we can use to clear it with clearTimeout,\n  // hence the 'Id' suffix\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  keypressTimeoutId = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  timeoutMessageId = null\n\n  /**\n   * @param {Element | null} $module - HTML element that wraps the Exit This Page button\n   * @param {ExitThisPageConfig} [config] - Exit This Page config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Exit this page',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $button = $module.querySelector('.govuk-exit-this-page__button')\n    if (!($button instanceof HTMLAnchorElement)) {\n      throw new ElementError({\n        componentName: 'Exit this page',\n        element: $button,\n        expectedType: 'HTMLAnchorElement',\n        identifier: 'Button (`.govuk-exit-this-page__button`)'\n      })\n    }\n\n    this.config = mergeConfigs(\n      ExitThisPage.defaults,\n      config,\n      normaliseDataset(ExitThisPage, $module.dataset)\n    )\n\n    this.i18n = new I18n(this.config.i18n)\n    this.$module = $module\n    this.$button = $button\n\n    const $skiplinkButton = document.querySelector(\n      '.govuk-js-exit-this-page-skiplink'\n    )\n    if ($skiplinkButton instanceof HTMLAnchorElement) {\n      this.$skiplinkButton = $skiplinkButton\n    }\n\n    this.buildIndicator()\n    this.initUpdateSpan()\n    this.initButtonClickHandler()\n\n    // Check to see if this has already been done by a previous initialisation of ExitThisPage\n    if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n      document.addEventListener('keyup', this.handleKeypress.bind(this), true)\n      document.body.dataset.govukFrontendExitThisPageKeypress = 'true'\n    }\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // blank overlay remains present, rendering the page unusable. Here, we check\n    // to see if it's present on page (re)load, and remove it if so.\n    window.addEventListener('pageshow', this.resetPage.bind(this))\n  }\n\n  /**\n   * Create the <span> we use for screen reader announcements.\n   *\n   * @private\n   */\n  initUpdateSpan() {\n    this.$updateSpan = document.createElement('span')\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.className = 'govuk-visually-hidden'\n\n    this.$module.appendChild(this.$updateSpan)\n  }\n\n  /**\n   * Create button click handlers.\n   *\n   * @private\n   */\n  initButtonClickHandler() {\n    // Main EtP button\n    this.$button.addEventListener('click', this.handleClick.bind(this))\n\n    // EtP secondary link\n    if (this.$skiplinkButton) {\n      this.$skiplinkButton.addEventListener(\n        'click',\n        this.handleClick.bind(this)\n      )\n    }\n  }\n\n  /**\n   * Create the HTML for the 'three lights' indicator on the button.\n   *\n   * @private\n   */\n  buildIndicator() {\n    // Build container\n    // Putting `aria-hidden` on it as it won't contain any readable information\n    this.$indicatorContainer = document.createElement('div')\n    this.$indicatorContainer.className = 'govuk-exit-this-page__indicator'\n    this.$indicatorContainer.setAttribute('aria-hidden', 'true')\n\n    // Create three 'lights' and place them within the container\n    for (let i = 0; i < 3; i++) {\n      const $indicator = document.createElement('div')\n      $indicator.className = 'govuk-exit-this-page__indicator-light'\n      this.$indicatorContainer.appendChild($indicator)\n    }\n\n    // Append it all to the module\n    this.$button.appendChild(this.$indicatorContainer)\n  }\n\n  /**\n   * Update whether the lights are visible and which ones are lit up depending on\n   * the value of `keypressCounter`.\n   *\n   * @private\n   */\n  updateIndicator() {\n    if (!this.$indicatorContainer) {\n      return\n    }\n\n    // Show or hide the indicator container depending on keypressCounter value\n    this.$indicatorContainer.classList.toggle(\n      'govuk-exit-this-page__indicator--visible',\n      this.keypressCounter > 0\n    )\n\n    // Turn on only the indicators we want on\n    const $indicators = this.$indicatorContainer.querySelectorAll(\n      '.govuk-exit-this-page__indicator-light'\n    )\n    $indicators.forEach(($indicator, index) => {\n      $indicator.classList.toggle(\n        'govuk-exit-this-page__indicator-light--on',\n        index < this.keypressCounter\n      )\n    })\n  }\n\n  /**\n   * Initiates the redirection away from the current page.\n   * Includes the loading overlay functionality, which covers the current page with a\n   * white overlay so that the contents are not visible during the loading\n   * process. This is particularly important on slow network connections.\n   *\n   * @private\n   */\n  exitPage() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    this.$updateSpan.textContent = ''\n\n    // Blank the page\n    // As well as creating an overlay with text, we also set the body to hidden\n    // to prevent screen reader and sequential navigation users potentially\n    // navigating through the page behind the overlay during loading\n    document.body.classList.add('govuk-exit-this-page-hide-content')\n    this.$overlay = document.createElement('div')\n    this.$overlay.className = 'govuk-exit-this-page-overlay'\n    this.$overlay.setAttribute('role', 'alert')\n\n    // we do these this way round, thus incurring a second paint, because changing\n    // the element text after adding it means that screen readers pick up the\n    // announcement more reliably.\n    document.body.appendChild(this.$overlay)\n    this.$overlay.textContent = this.i18n.t('activated')\n\n    window.location.href = this.$button.href\n  }\n\n  /**\n   * Pre-activation logic for when the button is clicked/activated via mouse or\n   * pointer.\n   *\n   * We do this to differentiate it from the keyboard activation event because we\n   * need to run `e.preventDefault` as the button or skiplink are both links and we\n   * want to apply some additional logic in `exitPage` before navigating.\n   *\n   * @private\n   * @param {MouseEvent} event - mouse click event\n   */\n  handleClick(event) {\n    event.preventDefault()\n    this.exitPage()\n  }\n\n  /**\n   * Logic for the 'quick escape' keyboard sequence functionality (pressing the\n   * Shift key three times without interruption, within a time limit).\n   *\n   * @private\n   * @param {KeyboardEvent} event - keyup event\n   */\n  handleKeypress(event) {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    // Detect if the 'Shift' key has been pressed. We want to only do things if it\n    // was pressed by itself and not in a combination with another keyâ€”so we keep\n    // track of whether the preceding keyup had shiftKey: true on it, and if it\n    // did, we ignore the next Shift keyup event.\n    //\n    // This works because using Shift as a modifier key (e.g. pressing Shift + A)\n    // will fire TWO keyup events, one for A (with e.shiftKey: true) and the other\n    // for Shift (with e.shiftKey: false).\n    if (event.key === 'Shift' && !this.lastKeyWasModified) {\n      this.keypressCounter += 1\n\n      // Update the indicator before the below if statement can reset it back to 0\n      this.updateIndicator()\n\n      // Clear the timeout for the keypress timeout message clearing itself\n      if (this.timeoutMessageId) {\n        window.clearTimeout(this.timeoutMessageId)\n        this.timeoutMessageId = null\n      }\n\n      if (this.keypressCounter >= 3) {\n        this.keypressCounter = 0\n\n        if (this.keypressTimeoutId) {\n          window.clearTimeout(this.keypressTimeoutId)\n          this.keypressTimeoutId = null\n        }\n\n        this.exitPage()\n      } else {\n        if (this.keypressCounter === 1) {\n          this.$updateSpan.textContent = this.i18n.t('pressTwoMoreTimes')\n        } else {\n          this.$updateSpan.textContent = this.i18n.t('pressOneMoreTime')\n        }\n      }\n\n      this.setKeypressTimer()\n    } else if (this.keypressTimeoutId) {\n      // If the user pressed any key other than 'Shift', after having pressed\n      // 'Shift' and activating the timer, stop and reset the timer.\n      this.resetKeypressTimer()\n    }\n\n    // Keep track of whether the Shift modifier key was held during this keypress\n    this.lastKeyWasModified = event.shiftKey\n  }\n\n  /**\n   * Starts the 'quick escape' keyboard sequence timer.\n   *\n   * This can be invoked several times. We want this to be possible so that the\n   * timer is restarted each time the shortcut key is pressed (e.g. the user has\n   * up to n seconds between each keypress, rather than n seconds to invoke the\n   * entire sequence.)\n   *\n   * @private\n   */\n  setKeypressTimer() {\n    // Clear any existing timeout. This is so only one timer is running even if\n    // there are multiple keypresses in quick succession.\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    // Set a fresh timeout\n    this.keypressTimeoutId = window.setTimeout(\n      this.resetKeypressTimer.bind(this),\n      this.timeoutTime\n    )\n  }\n\n  /**\n   * Stops and resets the 'quick escape' keyboard sequence timer.\n   *\n   * @private\n   */\n  resetKeypressTimer() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n      this.keypressTimeoutId = null\n    }\n\n    const $updateSpan = this.$updateSpan\n\n    this.keypressCounter = 0\n    $updateSpan.textContent = this.i18n.t('timedOut')\n\n    this.timeoutMessageId = window.setTimeout(() => {\n      $updateSpan.textContent = ''\n    }, this.timeoutTime)\n\n    this.updateIndicator()\n  }\n\n  /**\n   * Reset the page using the EtP button\n   *\n   * We use this in situations where a user may re-enter a page using the browser\n   * back button. In these cases, the browser can choose to restore the state of\n   * the page as it was previously, including restoring the 'ghost page' overlay,\n   * the announcement span having it's role set to \"alert\" and the keypress\n   * indicator still active, leaving the page in an unusable state.\n   *\n   * By running this check when the page is shown, we can programatically restore\n   * the page and the component to a \"default\" state\n   *\n   * @private\n   */\n  resetPage() {\n    // If an overlay is set, remove it and reset the value\n    document.body.classList.remove('govuk-exit-this-page-hide-content')\n\n    if (this.$overlay) {\n      this.$overlay.remove()\n      this.$overlay = null\n    }\n\n    // Ensure the announcement span's role is status, not alert and clear any text\n    if (this.$updateSpan) {\n      this.$updateSpan.setAttribute('role', 'status')\n      this.$updateSpan.textContent = ''\n    }\n\n    // Sync the keypress indicator lights\n    this.updateIndicator()\n\n    // If the timeouts are active, clear them\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    if (this.timeoutMessageId) {\n      window.clearTimeout(this.timeoutMessageId)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-exit-this-page'\n\n  /**\n   * Exit this page default config\n   *\n   * @see {@link ExitThisPageConfig}\n   * @constant\n   * @type {ExitThisPageConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  })\n\n  /**\n   * Exit this page config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Exit this Page config\n *\n * @see {@link ExitThisPage.defaults}\n * @typedef {object} ExitThisPageConfig\n * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n */\n\n/**\n * Exit this Page translations\n *\n * @see {@link ExitThisPage.defaults.i18n}\n * @typedef {object} ExitThisPageTranslations\n *\n * Messages used by the component programatically inserted text, including\n * overlay text and screen reader announcements.\n * @property {string} [activated] - Screen reader announcement for when EtP\n *   keypress functionality has been successfully activated.\n * @property {string} [timedOut] - Screen reader announcement for when the EtP\n *   keypress functionality has timed out.\n * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n *   the user they must press the activation key two more times.\n * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n *   the user they must press the activation key one more time.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n","import { getBreakpoint } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Header component\n *\n * @preserve\n */\nexport class Header extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to big and\n   * back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the\n   * browser viewport moves between states.\n   *\n   * @param {Element | null} $module - HTML element to use for header\n   */\n  constructor($module) {\n    super()\n\n    if (!$module) {\n      throw new ElementError({\n        componentName: 'Header',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n    const $menuButton = $module.querySelector('.govuk-js-header-toggle')\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        componentName: 'Header',\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-header-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        componentName: 'Header',\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('desktop')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        componentName: 'Header',\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-header'\n}\n","import { mergeConfigs, setFocus } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Notification Banner component\n *\n * @preserve\n */\nexport class NotificationBanner extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {NotificationBannerConfig}\n   */\n  config\n\n  /**\n   * @param {Element | null} $module - HTML element to use for notification banner\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Notification banner',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      NotificationBanner.defaults,\n      config,\n      normaliseDataset(NotificationBanner, $module.dataset)\n    )\n\n    /**\n     * Focus the notification banner\n     *\n     * If `role=\"alert\"` is set, focus the element to help some assistive\n     * technologies prioritise announcing it.\n     *\n     * You can turn off the auto-focus functionality by setting\n     * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n     * do this based on user research findings, or to avoid a clash with another\n     * element which should be focused when the page loads.\n     */\n    if (\n      this.$module.getAttribute('role') === 'alert' &&\n      !this.config.disableAutoFocus\n    ) {\n      setFocus(this.$module)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-notification-banner'\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Notification banner config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` â€“ in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Password input component\n *\n * @preserve\n */\nexport class PasswordInput extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {PasswordInputConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /**\n   * @private\n   * @type {HTMLInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   * @type {HTMLButtonElement}\n   */\n  $showHideButton\n\n  /** @private */\n  $screenReaderStatusMessage\n\n  /**\n   * @param {Element | null} $module - HTML element to use for password input\n   * @param {PasswordInputConfig} [config] - Password input config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Password input',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $input = $module.querySelector('.govuk-js-password-input-input')\n    if (!($input instanceof HTMLInputElement)) {\n      throw new ElementError({\n        componentName: 'Password input',\n        element: $input,\n        expectedType: 'HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-password-input-input`)'\n      })\n    }\n\n    if ($input.type !== 'password') {\n      throw new ElementError(\n        'Password input: Form field (`.govuk-js-password-input-input`) must be of type `password`.'\n      )\n    }\n\n    const $showHideButton = $module.querySelector(\n      '.govuk-js-password-input-toggle'\n    )\n    if (!($showHideButton instanceof HTMLButtonElement)) {\n      throw new ElementError({\n        componentName: 'Password input',\n        element: $showHideButton,\n        expectedType: 'HTMLButtonElement',\n        identifier: 'Button (`.govuk-js-password-input-toggle`)'\n      })\n    }\n\n    if ($showHideButton.type !== 'button') {\n      throw new ElementError(\n        'Password input: Button (`.govuk-js-password-input-toggle`) must be of type `button`.'\n      )\n    }\n\n    this.$module = $module\n    this.$input = $input\n    this.$showHideButton = $showHideButton\n\n    this.config = mergeConfigs(\n      PasswordInput.defaults,\n      config,\n      normaliseDataset(PasswordInput, $module.dataset)\n    )\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue($module, 'lang')\n    })\n\n    // Show the toggle button element\n    this.$showHideButton.removeAttribute('hidden')\n\n    // Create and append the status text for screen readers.\n    // This is injected between the input and button so that users get a sensible reading order if\n    // moving through the page content linearly:\n    // [password input] -> [your password is visible/hidden] -> [show/hide password]\n    const $screenReaderStatusMessage = document.createElement('div')\n    $screenReaderStatusMessage.className =\n      'govuk-password-input__sr-status govuk-visually-hidden'\n    $screenReaderStatusMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderStatusMessage = $screenReaderStatusMessage\n    this.$input.insertAdjacentElement('afterend', $screenReaderStatusMessage)\n\n    // Bind toggle button\n    this.$showHideButton.addEventListener('click', this.toggle.bind(this))\n\n    // Bind event to revert the password visibility to hidden\n    if (this.$input.form) {\n      this.$input.form.addEventListener('submit', () => this.hide())\n    }\n\n    // If the page is restored from bfcache and the password is visible, hide it again\n    window.addEventListener('pageshow', (event) => {\n      if (event.persisted && this.$input.type !== 'password') {\n        this.hide()\n      }\n    })\n\n    // Default the component to having the password hidden.\n    this.hide()\n  }\n\n  /**\n   * Toggle the visibility of the password input\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  toggle(event) {\n    event.preventDefault()\n\n    // If on this click, the field is type=\"password\", show the value\n    if (this.$input.type === 'password') {\n      this.show()\n      return\n    }\n\n    // Otherwise, hide it\n    // Being defensive - hiding should always be the default\n    this.hide()\n  }\n\n  /**\n   * Show the password input value in plain text.\n   *\n   * @private\n   */\n  show() {\n    this.setType('text')\n  }\n\n  /**\n   * Hide the password input value.\n   *\n   * @private\n   */\n  hide() {\n    this.setType('password')\n  }\n\n  /**\n   * Set the password input type\n   *\n   * @param {'text' | 'password'} type - Input type\n   * @private\n   */\n  setType(type) {\n    if (type === this.$input.type) {\n      return\n    }\n\n    // Update input type\n    this.$input.setAttribute('type', type)\n\n    const isHidden = type === 'password'\n    const prefixButton = isHidden ? 'show' : 'hide'\n    const prefixStatus = isHidden ? 'passwordHidden' : 'passwordShown'\n\n    // Update button text\n    this.$showHideButton.innerText = this.i18n.t(`${prefixButton}Password`)\n\n    // Update button aria-label\n    this.$showHideButton.setAttribute(\n      'aria-label',\n      this.i18n.t(`${prefixButton}PasswordAriaLabel`)\n    )\n\n    // Update status change text\n    this.$screenReaderStatusMessage.innerText = this.i18n.t(\n      `${prefixStatus}Announcement`\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-password-input'\n\n  /**\n   * Password input default config\n   *\n   * @see {@link PasswordInputConfig}\n   * @constant\n   * @default\n   * @type {PasswordInputConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      showPassword: 'Show',\n      hidePassword: 'Hide',\n      showPasswordAriaLabel: 'Show password',\n      hidePasswordAriaLabel: 'Hide password',\n      passwordShownAnnouncement: 'Your password is visible',\n      passwordHiddenAnnouncement: 'Your password is hidden'\n    }\n  })\n\n  /**\n   * Password input config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Password input config\n *\n * @typedef {object} PasswordInputConfig\n * @property {PasswordInputTranslations} [i18n=PasswordInput.defaults.i18n] - Password input translations\n */\n\n/**\n * Password input translations\n *\n * @see {@link PasswordInput.defaults.i18n}\n * @typedef {object} PasswordInputTranslations\n *\n * Messages displayed to the user indicating the state of the show/hide toggle.\n * @property {string} [showPassword] - Visible text of the button when the\n *   password is currently hidden. Plain text only.\n * @property {string} [hidePassword] - Visible text of the button when the\n *   password is currently visible. Plain text only.\n * @property {string} [showPasswordAriaLabel] - aria-label of the button when\n *   the password is currently hidden. Plain text only.\n * @property {string} [hidePasswordAriaLabel] - aria-label of the button when\n *   the password is currently visible. Plain text only.\n * @property {string} [passwordShownAnnouncement] - Screen reader\n *   announcement to make when the password has just become visible.\n *   Plain text only.\n * @property {string} [passwordHiddenAnnouncement] - Screen reader\n *   announcement to make when the password has just been hidden.\n *   Plain text only.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n * @typedef {import('../../i18n.mjs').TranslationPluralForms} TranslationPluralForms\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Radios component\n *\n * @preserve\n */\nexport class Radios extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block â€“\n   * for example, a radio for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the radio state.\n   *\n   * @param {Element | null} $module - HTML element to use for radios\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Radios',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $inputs = $module.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        componentName: 'Radios',\n        identifier: 'Form inputs (`<input type=\"radio\">`)'\n      })\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          componentName: 'Radios',\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-radios__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a\n   * radio in another $module)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'radio'\n    ) {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    const $allInputs = document.querySelectorAll(\n      'input[type=\"radio\"][aria-controls]'\n    )\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-radios'\n}\n","import { getBreakpoint } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Service Navigation component\n *\n * @preserve\n */\nexport class ServiceNavigation extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Remember the open/closed state of the nav so we can maintain it when the\n   * screen is resized.\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for header\n   */\n  constructor($module) {\n    super()\n\n    if (!$module) {\n      throw new ElementError({\n        componentName: 'Service Navigation',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    const $menuButton = $module.querySelector(\n      '.govuk-js-service-navigation-toggle'\n    )\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        componentName: 'Service Navigation',\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-service-navigation-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        componentName: 'Service Navigation',\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        componentName: 'Service Navigation',\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-service-navigation'\n}\n","import { getFragmentFromUrl, setFocus } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Skip link component\n *\n * @preserve\n */\nexport class SkipLink extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @param {Element | null} $module - HTML element to use for skip link\n   * @throws {ElementError} when $module is not set or the wrong type\n   * @throws {ElementError} when $module.hash does not contain a hash\n   * @throws {ElementError} when the linked element is missing or the wrong type\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLAnchorElement)) {\n      throw new ElementError({\n        componentName: 'Skip link',\n        element: $module,\n        expectedType: 'HTMLAnchorElement',\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    const hash = this.$module.hash\n    const href = this.$module.getAttribute('href') ?? ''\n\n    /** @type {URL | undefined} */\n    let url\n\n    /**\n     * Check for valid link URL\n     *\n     * {@link https://caniuse.com/url}\n     * {@link https://url.spec.whatwg.org}\n     *\n     */\n    try {\n      url = new window.URL(this.$module.href)\n    } catch (error) {\n      throw new ElementError(\n        `Skip link: Target link (\\`href=\"${href}\"\\`) is invalid`\n      )\n    }\n\n    // Return early for external URLs or links to other pages\n    if (\n      url.origin !== window.location.origin ||\n      url.pathname !== window.location.pathname\n    ) {\n      return\n    }\n\n    const linkedElementId = getFragmentFromUrl(hash)\n\n    // Check link path matching current page\n    if (!linkedElementId) {\n      throw new ElementError(\n        `Skip link: Target link (\\`href=\"${href}\"\\`) has no hash fragment`\n      )\n    }\n\n    const $linkedElement = document.getElementById(linkedElementId)\n\n    // Check for link target element\n    if (!$linkedElement) {\n      throw new ElementError({\n        componentName: 'Skip link',\n        element: $linkedElement,\n        identifier: `Target content (\\`id=\"${linkedElementId}\"\\`)`\n      })\n    }\n\n    /**\n     * Focus the linked element on click\n     *\n     * Adds a helper CSS class to hide native focus styles,\n     * but removes it on blur to restore native focus styles\n     */\n    this.$module.addEventListener('click', () =>\n      setFocus($linkedElement, {\n        onBeforeFocus() {\n          $linkedElement.classList.add('govuk-skip-link-focused-element')\n        },\n        onBlur() {\n          $linkedElement.classList.remove('govuk-skip-link-focused-element')\n        }\n      })\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-skip-link'\n}\n","import { getBreakpoint, getFragmentFromUrl } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Tabs component\n *\n * @preserve\n */\nexport class Tabs extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $tabs\n\n  /** @private */\n  $tabList\n\n  /** @private */\n  $tabListItems\n\n  /** @private */\n  jsHiddenClass = 'govuk-tabs__panel--hidden'\n\n  /** @private */\n  changingHash = false\n\n  /** @private */\n  boundTabClick\n\n  /** @private */\n  boundTabKeydown\n\n  /** @private */\n  boundOnHashChange\n\n  /**\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for tabs\n   */\n  constructor($module) {\n    super()\n\n    if (!$module) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $tabs = $module.querySelectorAll('a.govuk-tabs__tab')\n    if (!$tabs.length) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        identifier: 'Links (`<a class=\"govuk-tabs__tab\">`)'\n      })\n    }\n\n    this.$module = $module\n    this.$tabs = $tabs\n\n    // Save bound functions so we can remove event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    const $tabList = this.$module.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$module.querySelectorAll(\n      'li.govuk-tabs__list-item'\n    )\n\n    if (!$tabList) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        identifier: 'List (`<ul class=\"govuk-tabs__list\">`)'\n      })\n    }\n\n    if (!$tabListItems.length) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        identifier: 'List items (`<li class=\"govuk-tabs__list-item\">`)'\n      })\n    }\n\n    this.$tabList = $tabList\n    this.$tabListItems = $tabListItems\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend tablet breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   *\n   * @private\n   */\n  checkMode() {\n    if (this.mql?.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   *\n   * @private\n   */\n  setup() {\n    this.$tabList.setAttribute('role', 'tablist')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) ?? this.$tabs[0]\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   *\n   * @private\n   */\n  teardown() {\n    this.$tabList.removeAttribute('role')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   *\n   * @private\n   * @returns {void | undefined} Returns void, or undefined when prevented\n   */\n  onHashChange() {\n    const hash = window.location.hash\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @private\n   * @param {string} hash - Hash fragment including #\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getTab(hash) {\n    return this.$module.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes($tab) {\n    const panelId = getFragmentFromUrl($tab.href)\n    if (!panelId) {\n      return\n    }\n\n    // Set tab attributes\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // Set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {void} Returns void\n   */\n  onTabClick(event) {\n    const $currentTab = this.getCurrentTab()\n    const $nextTab = event.currentTarget\n\n    if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id so the page doesn't jump when a user clicks a tab\n    // (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = panelId\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right arrow for next tab\n   * - Press left arrow for previous tab\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown(event) {\n    switch (event.key) {\n      // 'Left' and 'Right' required for Edge 16 support.\n      case 'ArrowLeft':\n      case 'Left':\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case 'ArrowRight':\n      case 'Right':\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   *\n   * @private\n   */\n  activateNextTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   *\n   * @private\n   */\n  activatePreviousTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $previousTabListItem =\n      $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {Element | null} Tab panel\n   */\n  getPanel($tab) {\n    const panelId = getFragmentFromUrl($tab.href)\n    if (!panelId) {\n      return null\n    }\n\n    return this.$module.querySelector(`#${panelId}`)\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   *\n   * @private\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getCurrentTab() {\n    return this.$module.querySelector(\n      '.govuk-tabs__list-item--selected a.govuk-tabs__tab'\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-tabs'\n}\n","import { isSupported } from './common/index.mjs'\nimport { Accordion } from './components/accordion/accordion.mjs'\nimport { Button } from './components/button/button.mjs'\nimport { CharacterCount } from './components/character-count/character-count.mjs'\nimport { Checkboxes } from './components/checkboxes/checkboxes.mjs'\nimport { ErrorSummary } from './components/error-summary/error-summary.mjs'\nimport { ExitThisPage } from './components/exit-this-page/exit-this-page.mjs'\nimport { Header } from './components/header/header.mjs'\nimport { NotificationBanner } from './components/notification-banner/notification-banner.mjs'\nimport { PasswordInput } from './components/password-input/password-input.mjs'\nimport { Radios } from './components/radios/radios.mjs'\nimport { ServiceNavigation } from './components/service-navigation/service-navigation.mjs'\nimport { SkipLink } from './components/skip-link/skip-link.mjs'\nimport { Tabs } from './components/tabs/tabs.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find, instantiate and init all of the\n * components provided as part of GOV.UK Frontend.\n *\n * @param {Config & { scope?: Element }} [config] - Config for all components (with optional scope)\n */\nfunction initAll(config) {\n  config = typeof config !== 'undefined' ? config : {}\n\n  // Skip initialisation when GOV.UK Frontend is not supported\n  if (!isSupported()) {\n    console.log(new SupportError())\n    return\n  }\n\n  const components = /** @type {const} */ ([\n    [Accordion, config.accordion],\n    [Button, config.button],\n    [CharacterCount, config.characterCount],\n    [Checkboxes],\n    [ErrorSummary, config.errorSummary],\n    [ExitThisPage, config.exitThisPage],\n    [Header],\n    [NotificationBanner, config.notificationBanner],\n    [PasswordInput, config.passwordInput],\n    [Radios],\n    [ServiceNavigation],\n    [SkipLink],\n    [Tabs]\n  ])\n\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n  // Defaults to the entire document if nothing is set.\n  const $scope = config.scope ?? document\n\n  components.forEach(([Component, config]) => {\n    createAll(Component, config, $scope)\n  })\n}\n\n/**\n * Create all instances of a specific component on the page\n *\n * Uses the `data-module` attribute to find all elements matching the specified\n * component on the page, creating instances of the component object for each\n * of them.\n *\n * Any component errors will be caught and logged to the console.\n *\n * @template {CompatibleClass} T\n * @param {T} Component - class of the component to create\n * @param {T[\"defaults\"]} [config] - config for the component\n * @param {Element|Document} [$scope] - scope of the document to search within\n * @returns {Array<InstanceType<T>>} - array of instantiated components\n */\nfunction createAll(Component, config, $scope = document) {\n  const $elements = $scope.querySelectorAll(\n    `[data-module=\"${Component.moduleName}\"]`\n  )\n\n  /* eslint-disable-next-line @typescript-eslint/no-unsafe-return --\n   * We can't define CompatibleClass as `{new(): CompatibleClass, moduleName: string}`,\n   * as when doing `typeof Accordion` (or any component), TypeScript doesn't seem\n   * to acknowledge the static `moduleName` that's set in our component classes.\n   * This means we have to set the constructor of `CompatibleClass` as `{new(): any}`,\n   * leading to ESLint frowning that we're returning `any[]`.\n   */\n  return Array.from($elements)\n    .map(($element) => {\n      try {\n        // Only pass config to components that accept it\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return 'defaults' in Component && typeof config !== 'undefined'\n          ? new Component($element, config)\n          : new Component($element)\n      } catch (error) {\n        console.log(error)\n        return null\n      }\n    })\n    .filter(Boolean) // Exclude components that errored\n}\n\nexport { initAll, createAll }\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): object}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * @typedef {{new (...args: any[]): any, defaults?: object, moduleName: string}} CompatibleClass\n */\n\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * Config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {AccordionConfig} [accordion] - Accordion config\n * @property {ButtonConfig} [button] - Button config\n * @property {CharacterCountConfig} [characterCount] - Character Count config\n * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n * @property {PasswordInputConfig} [passwordInput] - Password input config\n */\n\n/**\n * Config for individual components\n *\n * @typedef {import('./components/accordion/accordion.mjs').AccordionConfig} AccordionConfig\n * @typedef {import('./components/accordion/accordion.mjs').AccordionTranslations} AccordionTranslations\n * @typedef {import('./components/button/button.mjs').ButtonConfig} ButtonConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountConfig} CharacterCountConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountTranslations} CharacterCountTranslations\n * @typedef {import('./components/error-summary/error-summary.mjs').ErrorSummaryConfig} ErrorSummaryConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageConfig} ExitThisPageConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageTranslations} ExitThisPageTranslations\n * @typedef {import('./components/notification-banner/notification-banner.mjs').NotificationBannerConfig} NotificationBannerConfig\n * @typedef {import('./components/password-input/password-input.mjs').PasswordInputConfig} PasswordInputConfig\n */\n\n/**\n * Component config keys, e.g. `accordion` and `characterCount`\n *\n * @typedef {keyof Config} ConfigKey\n */\n"],"names":["version","normaliseString","value","property","trimmedValue","trim","output","outputType","type","includes","length","isFinite","Number","mergeConfigs","configObjects","formattedConfigObject","configObject","key","Object","keys","option","override","isObject","extractConfigByNamespace","Component","dataset","namespace","schema","properties","newObject","entries","current","keyParts","split","index","name","getFragmentFromUrl","url","undefined","pop","getBreakpoint","window","getComputedStyle","document","documentElement","getPropertyValue","setFocus","$element","options","_options$onBeforeFocu","isFocusable","getAttribute","setAttribute","onFocus","addEventListener","onBlur","once","_options$onBlur","call","removeAttribute","onBeforeFocus","focus","isSupported","$scope","body","classList","contains","validateConfig","config","validationErrors","conditions","errors","Array","isArray","required","errorMessage","every","push","normaliseDataset","out","field","GOVUKFrontendError","Error","constructor","args","SupportError","supportMessage","HTMLScriptElement","prototype","ConfigError","ElementError","messageOrOptions","message","componentName","identifier","element","expectedType","GOVUKFrontendComponent","checkSupport","I18n","translations","_config$locale","locale","lang","t","lookupKey","translation","count","translationPluralForm","getPluralSuffix","match","replacePlaceholders","translationString","formatter","Intl","NumberFormat","supportedLocalesOf","replace","placeholderWithBraces","placeholderKey","hasOwnProperty","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","PluralRules","preferredForm","select","selectPluralFormUsingFallbackRules","console","warn","Math","abs","floor","ruleset","getPluralRulesForLocale","pluralRules","localeShort","pluralRule","pluralRulesMap","languages","arabic","chinese","french","german","irish","russian","scottish","spanish","welsh","n","lastTwo","last","Accordion","$module","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","$showAllButton","$showAllIcon","$showAllText","HTMLElement","defaults","querySelectorAll","initControls","initSectionHeaders","updateShowAllButton","areAllSectionsOpen","createElement","add","appendChild","$accordionControls","insertBefore","firstChild","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","i","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","$span","$heading","$summary","$button","id","attr","from","attributes","$headingText","$headingTextFocus","childNodes","$child","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","$summarySpan","$summarySpanFocus","remove","removeChild","$fragment","target","Element","closest","nowExpanded","storeState","expanded","$content","newButtonText","textContent","ariaLabelParts","ariaLabelMessage","join","toString","toggle","getIdentifier","rememberExpanded","sessionStorage","setItem","exception","state","getItem","$punctuationEl","moduleName","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","DEBOUNCE_TIMEOUT_IN_SECONDS","Button","debounceFormSubmitTimer","handleKeyDown","debounce","$target","preventDefault","click","preventDoubleClick","setTimeout","closestAttributeValue","attributeName","$closestElementWithAttribute","CharacterCount","_ref","_this$config$maxwords","$textarea","$visibleCountMessage","$screenReaderCountMessage","lastInputTimestamp","lastInputValue","valueChecker","maxLength","HTMLTextAreaElement","HTMLInputElement","datasetConfig","configOverrides","maxlength","maxwords","Infinity","textareaDescriptionId","$textareaDescription","getElementById","insertAdjacentElement","className","bindChangeEvents","updateCountMessage","handleKeyUp","handleFocus","handleBlur","updateVisibleCountMessage","Date","now","setInterval","updateIfValueChanged","clearInterval","updateScreenReaderCountMessage","remainingNumber","isError","isOverThreshold","getCountMessage","text","_text$match","tokens","countType","formatCountMessage","translationKeySuffix","threshold","currentLength","thresholdValue","charactersUnderLimit","one","other","charactersAtLimit","charactersOverLimit","wordsUnderLimit","wordsAtLimit","wordsOverLimit","textareaDescription","anyOf","Checkboxes","$inputs","$input","targetId","syncAllConditionalReveals","handleClick","syncConditionalRevealWithInputState","inputIsChecked","checked","unCheckAllInputsExcept","allInputsWithSameName","$inputWithSameName","hasSameFormOwner","form","unCheckExclusiveInputs","allInputsWithSameNameAndExclusiveBehaviour","$exclusiveInput","$clickedInput","hasAriaControls","hasBehaviourExclusive","ErrorSummary","disableAutoFocus","focusTarget","HTMLAnchorElement","inputId","href","$legendOrLabel","getAssociatedLegendOrLabel","scrollIntoView","preventScroll","_document$querySelect","$fieldset","$legends","getElementsByTagName","$candidateLegend","legendTop","getBoundingClientRect","top","inputRect","height","innerHeight","inputBottom","ExitThisPage","$skiplinkButton","$updateSpan","$indicatorContainer","$overlay","keypressCounter","lastKeyWasModified","timeoutTime","keypressTimeoutId","timeoutMessageId","buildIndicator","initUpdateSpan","initButtonClickHandler","handleKeypress","bind","govukFrontendExitThisPageKeypress","resetPage","$indicator","updateIndicator","$indicators","exitPage","location","clearTimeout","setKeypressTimer","resetKeypressTimer","shiftKey","activated","timedOut","pressTwoMoreTimes","pressOneMoreTime","Header","$menuButton","$menu","menuIsOpen","mql","menuId","setupResponsiveChecks","handleMenuButtonClick","breakpoint","matchMedia","checkMode","addListener","matches","NotificationBanner","PasswordInput","$showHideButton","$screenReaderStatusMessage","HTMLButtonElement","hide","persisted","show","setType","isHidden","prefixButton","prefixStatus","innerText","showPassword","hidePassword","showPasswordAriaLabel","hidePasswordAriaLabel","passwordShownAnnouncement","passwordHiddenAnnouncement","Radios","$allInputs","$clickedInputForm","$clickedInputName","hasSameName","ServiceNavigation","SkipLink","_this$$module$getAttr","hash","URL","error","origin","pathname","linkedElementId","$linkedElement","Tabs","$tabs","$tabList","$tabListItems","jsHiddenClass","changingHash","boundTabClick","boundTabKeydown","boundOnHashChange","onTabClick","onTabKeydown","onHashChange","_this$mql","setup","teardown","_this$getTab","$item","$tab","setAttributes","hideTab","$activeTab","getTab","showTab","removeEventListener","unsetAttributes","$tabWithHash","$previousTab","getCurrentTab","unhighlightTab","hidePanel","highlightTab","showPanel","panelId","$panel","getPanel","$currentTab","$nextTab","currentTarget","createHistoryEntry","activatePreviousTab","activateNextTab","parentElement","$nextTabListItem","nextElementSibling","$previousTabListItem","previousElementSibling","initAll","_config$scope","log","components","accordion","button","characterCount","errorSummary","exitThisPage","notificationBanner","passwordInput","scope","createAll","$elements","map","filter"],"mappings":"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"}