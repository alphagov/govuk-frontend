{"version":3,"file":"all.bundle.mjs","sources":["../../src/govuk/common/govuk-frontend-version.mjs","../../src/govuk/common/index.mjs","../../src/govuk/errors/index.mjs","../../src/govuk/component.mjs","../../src/govuk/common/configuration.mjs","../../src/govuk/i18n.mjs","../../src/govuk/components/accordion/accordion.mjs","../../src/govuk/components/button/button.mjs","../../src/govuk/common/closest-attribute-value.mjs","../../src/govuk/components/character-count/character-count.mjs","../../src/govuk/components/checkboxes/checkboxes.mjs","../../src/govuk/components/error-summary/error-summary.mjs","../../src/govuk/components/exit-this-page/exit-this-page.mjs","../../src/govuk/components/file-upload/file-upload.mjs","../../src/govuk/components/header/header.mjs","../../src/govuk/components/notification-banner/notification-banner.mjs","../../src/govuk/components/password-input/password-input.mjs","../../src/govuk/components/radios/radios.mjs","../../src/govuk/components/service-navigation/service-navigation.mjs","../../src/govuk/components/skip-link/skip-link.mjs","../../src/govuk/components/tabs/tabs.mjs","../../src/govuk/init.mjs"],"sourcesContent":["/*\n * This variable is automatically overwritten during builds and releases.\n * It doesn't need to be updated manually.\n */\n\n/**\n * GOV.UK Frontend release version\n *\n * {@link https://github.com/alphagov/govuk-frontend/releases}\n */\nexport const version = 'development'\n","/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Get hash fragment from URL\n *\n * Extract the hash fragment (everything after the hash) from a URL,\n * but not including the hash symbol\n *\n * @private\n * @param {string} url - URL\n * @returns {string | undefined} Fragment from URL, without the hash\n */\nexport function getFragmentFromUrl(url) {\n  if (!url.includes('#')) {\n    return undefined\n  }\n\n  return url.split('#').pop()\n}\n\n/**\n * Get GOV.UK Frontend breakpoint value from CSS custom property\n *\n * @private\n * @param {string} name - Breakpoint name\n * @returns {{ property: string, value?: string }} Breakpoint object\n */\nexport function getBreakpoint(name) {\n  const property = `--govuk-frontend-breakpoint-${name}`\n\n  // Get value from `<html>` with breakpoints on CSS :root\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(property)\n\n  return {\n    property,\n    value: value || undefined\n  }\n}\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * @private\n * @template {HTMLElement} FocusElement\n * @param {FocusElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: FocusElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: FocusElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.addEventListener('blur', onBlur, { once: true })\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    options.onBlur?.call($element)\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus, { once: true })\n\n  // Focus element\n  options.onBeforeFocus?.call($element)\n  $element.focus()\n}\n\n/**\n * Checks if component is already initialised\n *\n * @internal\n * @param {Element} $root - HTML element to be checked\n * @param {string} moduleName - name of component module\n * @returns {boolean} Whether component is already initialised\n */\nexport function isInitialised($root, moduleName) {\n  return (\n    $root instanceof HTMLElement &&\n    $root.hasAttribute(`data-${moduleName}-init`)\n  )\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @param {HTMLElement | null} [$scope] - (internal) `<body>` HTML element checked for browser support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  if (!$scope) {\n    return false\n  }\n\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Check for an array\n *\n * @internal\n * @param {unknown} option - Option to check\n * @returns {boolean} Whether the option is an array\n */\nfunction isArray(option) {\n  return Array.isArray(option)\n}\n\n/**\n * Check for an object\n *\n * @internal\n * @template {Partial<Record<keyof ObjectType, unknown>>} [ObjectType=ObjectNested]\n * @param {unknown | ObjectType} option - Option to check\n * @returns {option is ObjectType} Whether the option is an object\n */\nexport function isObject(option) {\n  return !!option && typeof option === 'object' && !isArray(option)\n}\n\n/**\n * Format error message\n *\n * @internal\n * @param {ComponentWithModuleName} Component - Component that threw the error\n * @param {string} message - Error message\n * @returns {string} - Formatted error message\n */\nexport function formatErrorMessage(Component, message) {\n  return `${Component.moduleName}: ${message}`\n}\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): object}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * @typedef ComponentWithModuleName\n * @property {string} moduleName - Name of the component\n */\n\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * @import { ObjectNested } from './configuration.mjs'\n */\n","import { formatErrorMessage } from '../common/index.mjs'\n\n/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @virtual\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  /**\n   * Checks if GOV.UK Frontend is supported on this page\n   *\n   * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n   */\n  constructor($scope = document.body) {\n    const supportMessage =\n      'noModule' in HTMLScriptElement.prototype\n        ? 'GOV.UK Frontend initialised without `<body class=\"govuk-frontend-supported\">` from template `<script>` snippet'\n        : 'GOV.UK Frontend is not supported in this browser'\n\n    super(\n      $scope\n        ? supportMessage\n        : 'GOV.UK Frontend initialised without `<script type=\"module\">`'\n    )\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @internal\n   * @overload\n   * @param {string} message - Element error message\n   */\n\n  /**\n   * @internal\n   * @overload\n   * @param {ElementErrorOptions} options - Element error options\n   */\n\n  /**\n   * @internal\n   * @param {string | ElementErrorOptions} messageOrOptions - Element error message or options\n   */\n  constructor(messageOrOptions) {\n    let message = typeof messageOrOptions === 'string' ? messageOrOptions : ''\n\n    // Build message from options\n    if (typeof messageOrOptions === 'object') {\n      const { component, identifier, element, expectedType } = messageOrOptions\n\n      message = identifier\n\n      // Append reason\n      message += element\n        ? ` is not of type ${expectedType ?? 'HTMLElement'}`\n        : ' not found'\n\n      message = formatErrorMessage(component, message)\n    }\n\n    super(message)\n  }\n}\n\n/**\n * Indicates that a component is already initialised\n */\nexport class InitError extends GOVUKFrontendError {\n  name = 'InitError'\n\n  /**\n   * @internal\n   * @param {ComponentWithModuleName | string} componentOrMessage - name of the component module\n   */\n  constructor(componentOrMessage) {\n    const message =\n      typeof componentOrMessage === 'string'\n        ? componentOrMessage\n        : formatErrorMessage(\n            componentOrMessage,\n            `Root element (\\`$root\\`) already initialised`\n          )\n\n    super(message)\n  }\n}\n\n/**\n * Element error options\n *\n * @internal\n * @typedef {object} ElementErrorOptions\n * @property {string} identifier - An identifier that'll let the user understand which element has an error. This is whatever makes the most sense\n * @property {Element | null} [element] - The element in error\n * @property {string} [expectedType] - The type that was expected for the identifier\n * @property {ComponentWithModuleName} component - Component throwing the error\n */\n\n/**\n * @import { ComponentWithModuleName } from '../common/index.mjs'\n */\n","import { isInitialised, isSupported } from './common/index.mjs'\nimport { ElementError, InitError, SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @virtual\n * @template {Element} [RootElementType=HTMLElement]\n */\nexport class Component {\n  /**\n   * @type {typeof Element}\n   */\n  static elementType = HTMLElement\n\n  // allows Typescript user to work around the lack of types\n  // in GOVUKFrontend package, Typescript is not aware of $root\n  // in components that extend GOVUKFrontendComponent\n  /**\n   * Returns the root element of the component\n   *\n   * @protected\n   * @returns {RootElementType} - the root element of component\n   */\n  get $root() {\n    return this._$root\n  }\n\n  /**\n   * @protected\n   * @type {RootElementType}\n   */\n  _$root\n\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   * @param {Element | null} [$root] - HTML element to use for component\n   */\n  constructor($root) {\n    const childConstructor = /** @type {ChildClassConstructor} */ (\n      this.constructor\n    )\n\n    // TypeScript does not enforce that inheriting classes will define a `moduleName`\n    // (even if we add a `@virtual` `static moduleName` property to this class).\n    // While we trust users to do this correctly, we do a little check to provide them\n    // a helpful error message.\n    //\n    // After this, we'll be sure that `childConstructor` has a `moduleName`\n    // as expected of the `ChildClassConstructor` we've cast `this.constructor` to.\n    if (typeof childConstructor.moduleName !== 'string') {\n      throw new InitError(`\\`moduleName\\` not defined in component`)\n    }\n\n    if (!($root instanceof childConstructor.elementType)) {\n      throw new ElementError({\n        element: $root,\n        component: childConstructor,\n        identifier: 'Root element (`$root`)',\n        expectedType: childConstructor.elementType.name\n      })\n    } else {\n      this._$root = /** @type {RootElementType} */ ($root)\n    }\n\n    childConstructor.checkSupport()\n\n    this.checkInitialised()\n\n    const moduleName = childConstructor.moduleName\n\n    this.$root.setAttribute(`data-${moduleName}-init`, '')\n  }\n\n  /**\n   * Validates whether component is already initialised\n   *\n   * @private\n   * @throws {InitError} when component is already initialised\n   */\n  checkInitialised() {\n    const constructor = /** @type {ChildClassConstructor} */ (this.constructor)\n    const moduleName = constructor.moduleName\n\n    if (moduleName && isInitialised(this.$root, moduleName)) {\n      throw new InitError(constructor)\n    }\n  }\n\n  /**\n   * Validates whether components are supported\n   *\n   * @throws {SupportError} when the components are not supported\n   */\n  static checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n\n/**\n * @typedef ChildClass\n * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n */\n\n/**\n * @typedef {typeof Component & ChildClass} ChildClassConstructor\n */\n","import { Component } from '../component.mjs'\nimport { ConfigError } from '../errors/index.mjs'\n\nimport { isObject, formatErrorMessage } from './index.mjs'\n\nexport const configOverride = Symbol.for('configOverride')\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @virtual\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @template {Element & { dataset: DOMStringMap }} [RootElementType=HTMLElement]\n * @augments Component<RootElementType>\n */\nexport class ConfigurableComponent extends Component {\n  /**\n   * configOverride\n   *\n   * Function which defines configuration overrides to prioritize\n   * properties from the root element's dataset.\n   *\n   * It should take a subset of configuration as input and return\n   * a new configuration object with properties that should be\n   * overridden based on the root element's dataset. A Symbol\n   * is used for indexing to prevent conflicts.\n   *\n   * @internal\n   * @virtual\n   * @param {Partial<ConfigurationType>} [param] - Configuration object\n   * @returns {Partial<ConfigurationType>} return - Configuration object\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [configOverride](param) {\n    return {}\n  }\n\n  /**\n   * Returns the root element of the component\n   *\n   * @protected\n   * @returns {ConfigurationType} - the root element of component\n   */\n  get config() {\n    return this._config\n  }\n\n  /**\n   *\n   * @type {ConfigurationType}\n   */\n  _config\n\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   * @param {Element | null} [$root] - HTML element to use for component\n   * @param {ConfigurationType} [config] - HTML element to use for component\n   */\n  constructor($root, config) {\n    super($root)\n\n    const childConstructor =\n      /** @type {ChildClassConstructor<ConfigurationType>} */ (this.constructor)\n\n    if (!isObject(childConstructor.defaults)) {\n      throw new ConfigError(\n        formatErrorMessage(\n          childConstructor,\n          'Config passed as parameter into constructor but no defaults defined'\n        )\n      )\n    }\n\n    const datasetConfig = /** @type {ConfigurationType} */ (\n      normaliseDataset(childConstructor, this._$root.dataset)\n    )\n\n    this._config = /** @type {ConfigurationType} */ (\n      mergeConfigs(\n        childConstructor.defaults,\n        config ?? {},\n        this[configOverride](datasetConfig),\n        datasetConfig\n      )\n    )\n  }\n}\n\n/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duck…' 🦆\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {DOMStringMap[string]} value - The value to normalise\n * @param {SchemaProperty} [property] - Component schema property\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString(value, property) {\n  const trimmedValue = value ? value.trim() : ''\n\n  let output\n  let outputType = property?.type\n\n  // No schema type set? Determine automatically\n  if (!outputType) {\n    if (['true', 'false'].includes(trimmedValue)) {\n      outputType = 'boolean'\n    }\n\n    // Empty / whitespace-only strings are considered finite so we need to check\n    // the length of the trimmed string as well\n    if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n      outputType = 'number'\n    }\n  }\n\n  switch (outputType) {\n    case 'boolean':\n      output = trimmedValue === 'true'\n      break\n\n    case 'number':\n      output = Number(trimmedValue)\n      break\n\n    default:\n      output = value\n  }\n\n  return output\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using {@link normaliseString},\n * optionally expanding nested `i18n.field`\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @template {[keyof ConfigurationType, SchemaProperty | undefined][]} SchemaEntryType\n * @param {{ schema?: Schema<ConfigurationType>, moduleName: string }} Component - Component class\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {ObjectNested} Normalised dataset\n */\nexport function normaliseDataset(Component, dataset) {\n  if (!isObject(Component.schema)) {\n    throw new ConfigError(\n      formatErrorMessage(\n        Component,\n        'Config passed as parameter into constructor but no schema defined'\n      )\n    )\n  }\n\n  const out = /** @type {ObjectNested} */ ({})\n  const entries = /** @type {SchemaEntryType} */ (\n    Object.entries(Component.schema.properties)\n  )\n\n  // Normalise top-level dataset ('data-*') values using schema types\n  for (const entry of entries) {\n    const [namespace, property] = entry\n\n    // Cast the `namespace` to string so it can be used to access the dataset\n    const field = namespace.toString()\n\n    if (field in dataset) {\n      out[field] = normaliseString(dataset[field], property)\n    }\n\n    /**\n     * Extract and normalise nested object values automatically using\n     * {@link normaliseString} but only schema object types are allowed\n     */\n    if (property?.type === 'object') {\n      out[field] = extractConfigByNamespace(\n        Component.schema,\n        dataset,\n        namespace\n      )\n    }\n  }\n\n  return out\n}\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns {{ [key: string]: unknown }} A merged config object\n */\nexport function mergeConfigs(...configObjects) {\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (isObject(option) && isObject(override)) {\n        formattedConfigObject[key] = mergeConfigs(option, override)\n      } else {\n        // Apply override\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Validate component config by schema\n *\n * Follows limited examples in JSON schema for wider support in future\n *\n * {@link https://ajv.js.org/json-schema.html#compound-keywords}\n * {@link https://ajv.js.org/packages/ajv-errors.html#single-message}\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {ConfigurationType} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    if (Array.isArray(conditions)) {\n      for (const { required, errorMessage } of conditions) {\n        if (!required.every((key) => !!config[key])) {\n          errors.push(errorMessage) // Missing config key value\n        }\n      }\n\n      // Check one condition passes or add errors\n      if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n        validationErrors.push(...errors)\n      }\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Extracts keys starting with a particular namespace from dataset ('data-*')\n * object, removing the namespace in the process, normalising all values\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {DOMStringMap} dataset - The object to extract key-value pairs from\n * @param {keyof ConfigurationType} namespace - The namespace to filter keys with\n * @returns {ObjectNested | undefined} Nested object with dot-separated key namespace removed\n */\nexport function extractConfigByNamespace(schema, dataset, namespace) {\n  const property = schema.properties[namespace]\n\n  // Only extract configs for object schema properties\n  if (property?.type !== 'object') {\n    return\n  }\n\n  // Add default empty config\n  const newObject = /** @type {Record<typeof namespace, ObjectNested>} */ ({\n    [namespace]: {}\n  })\n\n  for (const [key, value] of Object.entries(dataset)) {\n    /** @type {ObjectNested | ObjectNested[NestedKey]} */\n    let current = newObject\n\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n\n    /**\n     * Create new level per part\n     *\n     * e.g. 'i18n.textareaDescription.other' becomes\n     * `{ i18n: { textareaDescription: { other } } }`\n     */\n    for (const [index, name] of keyParts.entries()) {\n      if (isObject(current)) {\n        // Drop down to nested object until the last part\n        if (index < keyParts.length - 1) {\n          // New nested object (optionally) replaces existing value\n          if (!isObject(current[name])) {\n            current[name] = {}\n          }\n\n          // Drop down into new or existing nested object\n          current = current[name]\n        } else if (key !== namespace) {\n          // Normalised value (optionally) replaces existing value\n          current[name] = normaliseString(value)\n        }\n      }\n    }\n  }\n\n  return newObject[namespace]\n}\n\n/**\n * @internal\n * @typedef {keyof ObjectNested} NestedKey\n * @typedef {{ [key: string]: string | boolean | number | ObjectNested | undefined }} ObjectNested\n */\n\n/**\n * Schema for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} Schema\n * @property {Record<keyof ConfigurationType, SchemaProperty | undefined>} properties - Schema properties\n * @property {SchemaCondition<ConfigurationType>[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n\n/**\n * Schema condition for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} SchemaCondition\n * @property {(keyof ConfigurationType)[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @typedef ChildClass\n * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n * @property {Schema<ConfigurationType>} [schema] - The schema of the component configuration\n * @property {ConfigurationType} [defaults] - The default values of the configuration of the component\n */\n\n/**\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @typedef {typeof Component & ChildClass<ConfigurationType>} ChildClassConstructor<ConfigurationType>\n */\n","/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @internal\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @internal\n   * @param {{ [key: string]: string | TranslationPluralForms }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string | null} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations = {}, config = {}) {\n    // Make list of translations available throughout function\n    this.translations = translations\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale = config.locale ?? (document.documentElement.lang || 'en')\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // Fetch the translation for that lookup key\n    let translation = this.translations[lookupKey]\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (typeof options?.count === 'number' && typeof translation === 'object') {\n      const translationPluralForm =\n        translation[this.getPluralSuffix(lookupKey, options.count)]\n\n      // Update translation with plural suffix\n      if (translationPluralForm) {\n        translation = translationPluralForm\n      }\n    }\n\n    if (typeof translation === 'string') {\n      // Check for ${} placeholders in the translation string\n      if (translation.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translation, options)\n      }\n\n      return translation\n    }\n\n    // If the key wasn't found in our translations object,\n    // return the lookup key itself as the fallback\n    return lookupKey\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @internal\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    const formatter = Intl.NumberFormat.supportedLocalesOf(this.locale).length\n      ? new Intl.NumberFormat(this.locale)\n      : undefined\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @internal\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        }\n\n        throw new Error(\n          `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n        )\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl.PluralRules\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The implementation of Intl supports PluralRules (NOT true in Safari 10–12)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * {@link https://browsersl.ist/#q=supports+es6-module+and+not+supports+intl-pluralrules}\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form – if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    // Fetch the translation for that lookup key\n    const translation = this.translations[lookupKey]\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    const preferredForm = this.hasIntlPluralRulesSupport()\n      ? new Intl.PluralRules(this.locale).select(count)\n      : this.selectPluralFormUsingFallbackRules(count)\n\n    // Use the correct plural form if provided\n    if (typeof translation === 'object') {\n      if (preferredForm in translation) {\n        return preferredForm\n        // Fall back to `other` if the plural form is missing, but log a warning\n        // to the console\n      } else if ('other' in translation) {\n        console.warn(\n          `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n        )\n\n        return 'other'\n      }\n    }\n\n    // If the required `other` plural form is missing, all we can do is error\n    throw new Error(\n      `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n    )\n  }\n\n  /**\n   * Get the plural form using our fallback implementation\n   *\n   * This is split out into a separate function to make it easier to test the\n   * fallback behaviour in an environment where Intl.PluralRules exists.\n   *\n   * @internal\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The pluralisation form for count in this locale.\n   */\n  selectPluralFormUsingFallbackRules(count) {\n    // Currently our custom code can only handle positive integers, so let's\n    // make sure our number is one of those.\n    count = Math.abs(Math.floor(count))\n\n    const ruleset = this.getPluralRulesForLocale()\n\n    if (ruleset) {\n      return I18n.pluralRules[ruleset](count)\n    }\n\n    return 'other'\n  }\n\n  /**\n   * Work out which pluralisation rules to use for the current locale\n   *\n   * The locale may include a regional indicator (such as en-GB), but we don't\n   * usually care about this part, as pluralisation rules are usually the same\n   * regardless of region. There are exceptions, however, (e.g. Portuguese) so\n   * this searches by both the full and shortened locale codes, just to be sure.\n   *\n   * @internal\n   * @returns {string | undefined} The name of the pluralisation rule to use (a key for one\n   *   of the functions in this.pluralRules)\n   */\n  getPluralRulesForLocale() {\n    const localeShort = this.locale.split('-')[0]\n\n    // Look through the plural rules map to find which `pluralRule` is\n    // appropriate for our current `locale`.\n    for (const pluralRule in I18n.pluralRulesMap) {\n      const languages = I18n.pluralRulesMap[pluralRule]\n      if (languages.includes(this.locale) || languages.includes(localeShort)) {\n        return pluralRule\n      }\n    }\n  }\n\n  /**\n   * Map of plural rules to languages where those rules apply.\n   *\n   * Note: These groups are named for the most dominant or recognisable language\n   * that uses each system. The groupings do not imply that the languages are\n   * related to one another. Many languages have evolved the same systems\n   * independently of one another.\n   *\n   * Code to support more languages can be found in the i18n spike:\n   * {@link https://github.com/alphagov/govuk-frontend/blob/spike-i18n-support/src/govuk/i18n.mjs}\n   *\n   * Languages currently supported:\n   *\n   * Arabic: Arabic (ar)\n   * Chinese: Burmese (my), Chinese (zh), Indonesian (id), Japanese (ja),\n   *   Javanese (jv), Korean (ko), Malay (ms), Thai (th), Vietnamese (vi)\n   * French: Armenian (hy), Bangla (bn), French (fr), Gujarati (gu), Hindi (hi),\n   *   Persian Farsi (fa), Punjabi (pa), Zulu (zu)\n   * German: Afrikaans (af), Albanian (sq), Azerbaijani (az), Basque (eu),\n   *   Bulgarian (bg), Catalan (ca), Danish (da), Dutch (nl), English (en),\n   *   Estonian (et), Finnish (fi), Georgian (ka), German (de), Greek (el),\n   *   Hungarian (hu), Luxembourgish (lb), Norwegian (no), Somali (so),\n   *   Swahili (sw), Swedish (sv), Tamil (ta), Telugu (te), Turkish (tr),\n   *   Urdu (ur)\n   * Irish: Irish Gaelic (ga)\n   * Russian: Russian (ru), Ukrainian (uk)\n   * Scottish: Scottish Gaelic (gd)\n   * Spanish: European Portuguese (pt-PT), Italian (it), Spanish (es)\n   * Welsh: Welsh (cy)\n   *\n   * @internal\n   * @type {{ [key: string]: string[] }}\n   */\n  static pluralRulesMap = {\n    arabic: ['ar'],\n    chinese: ['my', 'zh', 'id', 'ja', 'jv', 'ko', 'ms', 'th', 'vi'],\n    french: ['hy', 'bn', 'fr', 'gu', 'hi', 'fa', 'pa', 'zu'],\n    german: [\n      'af',\n      'sq',\n      'az',\n      'eu',\n      'bg',\n      'ca',\n      'da',\n      'nl',\n      'en',\n      'et',\n      'fi',\n      'ka',\n      'de',\n      'el',\n      'hu',\n      'lb',\n      'no',\n      'so',\n      'sw',\n      'sv',\n      'ta',\n      'te',\n      'tr',\n      'ur'\n    ],\n    irish: ['ga'],\n    russian: ['ru', 'uk'],\n    scottish: ['gd'],\n    spanish: ['pt-PT', 'it', 'es'],\n    welsh: ['cy']\n  }\n\n  /**\n   * Different pluralisation rule sets\n   *\n   * Returns the appropriate suffix for the plural form associated with `n`.\n   * Possible suffixes: 'zero', 'one', 'two', 'few', 'many', 'other' (the actual\n   * meaning of each differs per locale). 'other' should always exist, even in\n   * languages without plurals, such as Chinese.\n   * {@link https://cldr.unicode.org/index/cldr-spec/plural-rules}\n   *\n   * The count must be a positive integer. Negative numbers and decimals aren't accounted for\n   *\n   * @internal\n   * @type {{ [key: string]: (count: number) => PluralRule }}\n   */\n  static pluralRules = {\n    arabic(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n % 100 >= 3 && n % 100 <= 10) {\n        return 'few'\n      }\n      if (n % 100 >= 11 && n % 100 <= 99) {\n        return 'many'\n      }\n      return 'other'\n    },\n    chinese() {\n      return 'other'\n    },\n    french(n) {\n      return n === 0 || n === 1 ? 'one' : 'other'\n    },\n    german(n) {\n      return n === 1 ? 'one' : 'other'\n    },\n    irish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n >= 3 && n <= 6) {\n        return 'few'\n      }\n      if (n >= 7 && n <= 10) {\n        return 'many'\n      }\n      return 'other'\n    },\n    russian(n) {\n      const lastTwo = n % 100\n      const last = lastTwo % 10\n      if (last === 1 && lastTwo !== 11) {\n        return 'one'\n      }\n      if (last >= 2 && last <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {\n        return 'few'\n      }\n      if (\n        last === 0 ||\n        (last >= 5 && last <= 9) ||\n        (lastTwo >= 11 && lastTwo <= 14)\n      ) {\n        return 'many'\n      }\n      // Note: The 'other' suffix is only used by decimal numbers in Russian.\n      // We don't anticipate it being used, but it's here for consistency.\n      return 'other'\n    },\n    scottish(n) {\n      if (n === 1 || n === 11) {\n        return 'one'\n      }\n      if (n === 2 || n === 12) {\n        return 'two'\n      }\n      if ((n >= 3 && n <= 10) || (n >= 13 && n <= 19)) {\n        return 'few'\n      }\n      return 'other'\n    },\n    spanish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n % 1000000 === 0 && n !== 0) {\n        return 'many'\n      }\n      return 'other'\n    },\n    welsh(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n === 3) {\n        return 'few'\n      }\n      if (n === 6) {\n        return 'many'\n      }\n      return 'other'\n    }\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @internal\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @internal\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n","import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n * @augments ConfigurableComponent<AccordionConfig>\n */\nexport class Accordion extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    this.i18n = new I18n(this.config.i18n)\n\n    const $sections = this.$root.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Sections (\\`<div class=\"${this.sectionClass}\">\\`)`\n      })\n    }\n\n    this.$sections = $sections\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$root.insertBefore($accordionControls, this.$root.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        throw new ElementError({\n          component: Accordion,\n          identifier: `Section headers (\\`<div class=\"${this.sectionHeaderClass}\">\\`)`\n        })\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections\n      // to open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$heading) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section heading (\\`.${this.sectionHeadingClass}\\`)`\n      })\n    }\n\n    if (!$span) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section button placeholder (\\`<span class=\"${this.sectionButtonClass}\">\\`)`\n      })\n    }\n\n    // Create a button element that will replace the\n    // '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$root.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes from $span to $button (except `id`, which gets added\n    // to the `$headingText` element)\n    for (const attr of Array.from($span.attributes)) {\n      if (attr.name !== 'id') {\n        $button.setAttribute(attr.name, attr.value)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by\n    // `aria-labelledby` on the hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus\n    // state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements\n    // (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    Array.from($span.childNodes).forEach(($child) =>\n      $headingTextFocus.appendChild($child)\n    )\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading. Must be\n    // set on the element before it's added to the DOM.\n    // See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the\n      // original `div` to the new `span`. This is because the summary line text\n      // is now inside a button element, which can only contain phrasing\n      // content.\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary\n      // focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (const attr of Array.from($summary.attributes)) {\n        $summarySpan.setAttribute(attr.name, attr.value)\n      }\n\n      // Copy original contents of summary to the new summary span\n      Array.from($summary.childNodes).forEach(($child) =>\n        $summarySpanFocus.appendChild($child)\n      )\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.remove()\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const nowExpanded = !this.isExpanded($section)\n    this.setExpanded(nowExpanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section, nowExpanded)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.areAllSectionsOpen()\n\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      this.storeState($section, nowExpanded)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$content) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section content (\\`<div class=\"${this.sectionContentClass}\">\\`)`\n      })\n    }\n\n    if (!$showHideIcon || !$showHideText || !$button) {\n      // Return early for elements we create\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText) {\n      ariaLabelParts.push(`${$headingText.textContent}`.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary) {\n      ariaLabelParts.push(`${$summary.textContent}`.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  areAllSectionsOpen() {\n    return Array.from(this.$sections).every(($section) =>\n      this.isExpanded($section)\n    )\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    if (!this.$showAllButton || !this.$showAllText || !this.$showAllIcon) {\n      return\n    }\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n    this.$showAllIcon.classList.toggle(this.downChevronIconClass, !expanded)\n  }\n\n  /**\n   * Get the identifier for a section\n   *\n   * We need a unique way of identifying each content in the Accordion.\n   * Since an `#id` should be unique and an `id` is required for `aria-`\n   * attributes `id` can be safely used.\n   *\n   * @param {Element} $section - Section element\n   * @returns {string | undefined | null} Identifier for section\n   */\n  getIdentifier($section) {\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n    return $button?.getAttribute('aria-controls')\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @param {boolean} isExpanded - Whether the section is expanded\n   */\n  storeState($section, isExpanded) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        window.sessionStorage.setItem(id, isExpanded.toString())\n      } catch (exception) {}\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        const state = window.sessionStorage.getItem(id)\n\n        if (state !== null) {\n          this.setExpanded(state === 'true', $section)\n        }\n      } catch (exception) {}\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with\n   * punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by\n   * dividing its contents into thematic chunks. See\n   * https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.textContent = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n\n  /**\n   * Accordion config schema\n   *\n   * @constant\n   * @satisfies {Schema<AccordionConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      rememberExpanded: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n","import { ConfigurableComponent } from '../../common/configuration.mjs'\n\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n * @augments ConfigurableComponent<ButtonConfig>\n */\nexport class Button extends ConfigurableComponent {\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    this.$root.addEventListener('keydown', (event) => this.handleKeyDown(event))\n    this.$root.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.key !== ' ') {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n\n  /**\n   * Button config schema\n   *\n   * @constant\n   * @satisfies {Schema<ButtonConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      preventDoubleClick: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n","/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @internal\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport {\n  validateConfig,\n  ConfigurableComponent,\n  configOverride\n} from '../../common/configuration.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @preserve\n * @augments ConfigurableComponent<CharacterCountConfig>\n */\nexport class CharacterCount extends ConfigurableComponent {\n  /** @private */\n  $textarea\n\n  /** @private */\n  $visibleCountMessage\n\n  /** @private */\n  $screenReaderCountMessage\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n\n  /** @private */\n  lastInputValue = ''\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /** @private */\n  i18n\n\n  /** @private */\n  maxLength;\n\n  /**\n   * Character count config override\n   *\n   * To ensure data-attributes take complete precedence, even if they change\n   * the type of count, we need to reset the `maxlength` and `maxwords` from\n   * the JavaScript config.\n   *\n   * @internal\n   * @param {CharacterCountConfig} datasetConfig - configuration specified by dataset\n   * @returns {CharacterCountConfig} - configuration to override by dataset\n   */\n  [configOverride](datasetConfig) {\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    return configOverrides\n  }\n\n  /**\n   * @param {Element | null} $root - HTML element to use for character count\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $textarea = this.$root.querySelector('.govuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textarea,\n        expectedType: 'HTMLTextareaElement or HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-character-count`)'\n      })\n    }\n\n    // Check for valid config\n    const errors = validateConfig(CharacterCount.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(formatErrorMessage(CharacterCount, errors[0]))\n    }\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    this.maxLength = this.config.maxwords ?? this.config.maxlength ?? Infinity\n\n    this.$textarea = $textarea\n\n    const textareaDescriptionId = `${this.$textarea.id}-info`\n    const $textareaDescription = document.getElementById(textareaDescriptionId)\n    if (!$textareaDescription) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textareaDescription,\n        identifier: `Count message (\\`id=\"${textareaDescriptionId}\"\\`)`\n      })\n    }\n\n    // Pre-existing validation error rendered from server\n    this.$errorMessage = this.$root.querySelector('.govuk-error-message')\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    if (`${$textareaDescription.textContent}`.match(/^\\s*$/)) {\n      $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n        count: this.maxLength\n      })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className =\n      'govuk-character-count__sr-status govuk-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement(\n      'afterend',\n      $screenReaderCountMessage\n    )\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('govuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('govuk-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   *\n   * @private\n   */\n  bindChangeEvents() {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   *\n   * @private\n   */\n  handleKeyUp() {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify\n   * the fields by directly changing its `value`. These changes don't trigger\n   * events in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check\n   * if the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   *\n   * @private\n   */\n  handleFocus() {\n    this.valueChecker = window.setInterval(() => {\n      if (\n        !this.lastInputTimestamp ||\n        Date.now() - 500 >= this.lastInputTimestamp\n      ) {\n        this.updateIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   *\n   * @private\n   */\n  handleBlur() {\n    // Cancel value checking on blur\n    if (this.valueChecker) {\n      window.clearInterval(this.valueChecker)\n    }\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   *\n   * @private\n   */\n  updateIfValueChanged() {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   *\n   * @private\n   */\n  updateCountMessage() {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   *\n   * @private\n   */\n  updateVisibleCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const isError = remainingNumber < 0\n\n    // If input is over the threshold, remove the disabled class which renders\n    // the counter invisible.\n    this.$visibleCountMessage.classList.toggle(\n      'govuk-character-count__message--disabled',\n      !this.isOverThreshold()\n    )\n\n    // Update styles\n    if (!this.$errorMessage) {\n      // Only toggle the textarea error class if there isn't an error message\n      // already, as it may be unrelated to the limit (eg: allowed characters)\n      // and would set the border colour back to black.\n      this.$textarea.classList.toggle('govuk-textarea--error', isError)\n    }\n    this.$visibleCountMessage.classList.toggle('govuk-error-message', isError)\n    this.$visibleCountMessage.classList.toggle('govuk-hint', !isError)\n\n    // Update message\n    this.$visibleCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   *\n   * @private\n   */\n  updateScreenReaderCountMessage() {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @private\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count(text) {\n    if (this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) ?? [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    }\n\n    return text.length\n  }\n\n  /**\n   * Get count message\n   *\n   * @private\n   * @returns {string} Status message\n   */\n  getCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const countType = this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @private\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage(remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix =\n      remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, {\n      count: Math.abs(remainingNumber)\n    })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @private\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold() {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = (maxLength * this.config.threshold) / 100\n\n    return thresholdValue <= currentLength\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-character-count'\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema<CharacterCountConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      maxwords: { type: 'number' },\n      maxlength: { type: 'number' },\n      threshold: { type: 'number' }\n    },\n    anyOf: [\n      {\n        required: ['maxwords'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      },\n      {\n        required: ['maxlength'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      }\n    ]\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfig\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n */\n","import { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Checkboxes component\n *\n * @preserve\n */\nexport class Checkboxes extends Component {\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block\n   * – for example, a checkbox for 'Phone' could reveal an additional form field\n   * for the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the checkbox state.\n   *\n   * @param {Element | null} $root - HTML element to use for checkboxes\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Checkboxes,\n        identifier: 'Form inputs (`<input type=\"checkbox\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Checkboxes,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this component.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-checkboxes__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-checkboxes__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a “None of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept($input) {\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = $input.form === $inputWithSameName.form\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive'\n   * behaviour, and uncheck them. This helps prevent someone checking both a\n   * regular checkbox and a \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs($input) {\n    const allInputsWithSameNameAndExclusiveBehaviour =\n      document.querySelectorAll(\n        `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n      )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = $input.form === $exclusiveInput.form\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the component root – if the click occurred on a checkbox,\n   * sync the state of any associated conditional reveal with the checkbox\n   * state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'checkbox'\n    ) {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive =\n      $clickedInput.getAttribute('data-behaviour') === 'exclusive'\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-checkboxes'\n}\n","import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { getFragmentFromUrl, setFocus } from '../../common/index.mjs'\n\n/**\n * Error summary component\n *\n * Takes focus on initialisation for accessible announcement, unless disabled in\n * configuration.\n *\n * @preserve\n * @augments ConfigurableComponent<ErrorSummaryConfig>\n */\nexport class ErrorSummary extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for error summary\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the error summary\n     */\n    if (!this.config.disableAutoFocus) {\n      setFocus(this.$root)\n    }\n\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Click event handler\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $target = event.target\n    if ($target && this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our\n   * labels or legends appear above the input, this means the user will be\n   * presented with an input without any context, as the label or legend will be\n   * off the top of the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and\n   * then focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is\n   * announced (e.g. \"Edit, has autocomplete\").\n   *\n   * @private\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = getFragmentFromUrl($target.href)\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input\n    // to avoid extra scrolling in browsers that don't support `preventScroll`\n    // (which at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @private\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no\n   *   associated legend or label can be found\n   */\n  getAssociatedLegendOrLabel($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if\n        // there is one.\n        if (\n          $input instanceof HTMLInputElement &&\n          ($input.type === 'checkbox' || $input.type === 'radio')\n        ) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldset’s legend (instead\n        // of the label associated with the input) if the input would end up in\n        // the top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return (\n      document.querySelector(`label[for='${$input.getAttribute('id')}']`) ??\n      $input.closest('label')\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-error-summary'\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Error summary config schema\n   *\n   * @constant\n   * @satisfies {Schema<ErrorSummaryConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Error summary config\n *\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n","import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Exit this page component\n *\n * @preserve\n * @augments ConfigurableComponent<ExitThisPageConfig>\n */\nexport class ExitThisPage extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /** @private */\n  $button\n\n  /**\n   * @private\n   * @type {HTMLAnchorElement | null}\n   */\n  $skiplinkButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $updateSpan = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $indicatorContainer = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $overlay = null\n\n  /** @private */\n  keypressCounter = 0\n\n  /** @private */\n  lastKeyWasModified = false\n\n  /** @private */\n  timeoutTime = 5000 // milliseconds\n\n  // Store the timeout events so that we can clear them to avoid user keypresses overlapping\n  // setTimeout returns an id that we can use to clear it with clearTimeout,\n  // hence the 'Id' suffix\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  keypressTimeoutId = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  timeoutMessageId = null\n\n  /**\n   * @param {Element | null} $root - HTML element that wraps the Exit This Page button\n   * @param {ExitThisPageConfig} [config] - Exit This Page config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $button = this.$root.querySelector('.govuk-exit-this-page__button')\n    if (!($button instanceof HTMLAnchorElement)) {\n      throw new ElementError({\n        component: ExitThisPage,\n        element: $button,\n        expectedType: 'HTMLAnchorElement',\n        identifier: 'Button (`.govuk-exit-this-page__button`)'\n      })\n    }\n\n    this.i18n = new I18n(this.config.i18n)\n    this.$button = $button\n\n    const $skiplinkButton = document.querySelector(\n      '.govuk-js-exit-this-page-skiplink'\n    )\n    if ($skiplinkButton instanceof HTMLAnchorElement) {\n      this.$skiplinkButton = $skiplinkButton\n    }\n\n    this.buildIndicator()\n    this.initUpdateSpan()\n    this.initButtonClickHandler()\n\n    // Check to see if this has already been done by a previous initialisation of ExitThisPage\n    if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n      document.addEventListener('keyup', this.handleKeypress.bind(this), true)\n      document.body.dataset.govukFrontendExitThisPageKeypress = 'true'\n    }\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // blank overlay remains present, rendering the page unusable. Here, we check\n    // to see if it's present on page (re)load, and remove it if so.\n    window.addEventListener('pageshow', this.resetPage.bind(this))\n  }\n\n  /**\n   * Create the <span> we use for screen reader announcements.\n   *\n   * @private\n   */\n  initUpdateSpan() {\n    this.$updateSpan = document.createElement('span')\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.className = 'govuk-visually-hidden'\n\n    this.$root.appendChild(this.$updateSpan)\n  }\n\n  /**\n   * Create button click handlers.\n   *\n   * @private\n   */\n  initButtonClickHandler() {\n    // Main EtP button\n    this.$button.addEventListener('click', this.handleClick.bind(this))\n\n    // EtP secondary link\n    if (this.$skiplinkButton) {\n      this.$skiplinkButton.addEventListener(\n        'click',\n        this.handleClick.bind(this)\n      )\n    }\n  }\n\n  /**\n   * Create the HTML for the 'three lights' indicator on the button.\n   *\n   * @private\n   */\n  buildIndicator() {\n    // Build container\n    // Putting `aria-hidden` on it as it won't contain any readable information\n    this.$indicatorContainer = document.createElement('div')\n    this.$indicatorContainer.className = 'govuk-exit-this-page__indicator'\n    this.$indicatorContainer.setAttribute('aria-hidden', 'true')\n\n    // Create three 'lights' and place them within the container\n    for (let i = 0; i < 3; i++) {\n      const $indicator = document.createElement('div')\n      $indicator.className = 'govuk-exit-this-page__indicator-light'\n      this.$indicatorContainer.appendChild($indicator)\n    }\n\n    // Append it all to the module\n    this.$button.appendChild(this.$indicatorContainer)\n  }\n\n  /**\n   * Update whether the lights are visible and which ones are lit up depending on\n   * the value of `keypressCounter`.\n   *\n   * @private\n   */\n  updateIndicator() {\n    if (!this.$indicatorContainer) {\n      return\n    }\n\n    // Show or hide the indicator container depending on keypressCounter value\n    this.$indicatorContainer.classList.toggle(\n      'govuk-exit-this-page__indicator--visible',\n      this.keypressCounter > 0\n    )\n\n    // Turn on only the indicators we want on\n    const $indicators = this.$indicatorContainer.querySelectorAll(\n      '.govuk-exit-this-page__indicator-light'\n    )\n    $indicators.forEach(($indicator, index) => {\n      $indicator.classList.toggle(\n        'govuk-exit-this-page__indicator-light--on',\n        index < this.keypressCounter\n      )\n    })\n  }\n\n  /**\n   * Initiates the redirection away from the current page.\n   * Includes the loading overlay functionality, which covers the current page with a\n   * white overlay so that the contents are not visible during the loading\n   * process. This is particularly important on slow network connections.\n   *\n   * @private\n   */\n  exitPage() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    this.$updateSpan.textContent = ''\n\n    // Blank the page\n    // As well as creating an overlay with text, we also set the body to hidden\n    // to prevent screen reader and sequential navigation users potentially\n    // navigating through the page behind the overlay during loading\n    document.body.classList.add('govuk-exit-this-page-hide-content')\n    this.$overlay = document.createElement('div')\n    this.$overlay.className = 'govuk-exit-this-page-overlay'\n    this.$overlay.setAttribute('role', 'alert')\n\n    // we do these this way round, thus incurring a second paint, because changing\n    // the element text after adding it means that screen readers pick up the\n    // announcement more reliably.\n    document.body.appendChild(this.$overlay)\n    this.$overlay.textContent = this.i18n.t('activated')\n\n    window.location.href = this.$button.href\n  }\n\n  /**\n   * Pre-activation logic for when the button is clicked/activated via mouse or\n   * pointer.\n   *\n   * We do this to differentiate it from the keyboard activation event because we\n   * need to run `e.preventDefault` as the button or skiplink are both links and we\n   * want to apply some additional logic in `exitPage` before navigating.\n   *\n   * @private\n   * @param {MouseEvent} event - mouse click event\n   */\n  handleClick(event) {\n    event.preventDefault()\n    this.exitPage()\n  }\n\n  /**\n   * Logic for the 'quick escape' keyboard sequence functionality (pressing the\n   * Shift key three times without interruption, within a time limit).\n   *\n   * @private\n   * @param {KeyboardEvent} event - keyup event\n   */\n  handleKeypress(event) {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    // Detect if the 'Shift' key has been pressed. We want to only do things if it\n    // was pressed by itself and not in a combination with another key—so we keep\n    // track of whether the preceding keyup had shiftKey: true on it, and if it\n    // did, we ignore the next Shift keyup event.\n    //\n    // This works because using Shift as a modifier key (e.g. pressing Shift + A)\n    // will fire TWO keyup events, one for A (with e.shiftKey: true) and the other\n    // for Shift (with e.shiftKey: false).\n    if (event.key === 'Shift' && !this.lastKeyWasModified) {\n      this.keypressCounter += 1\n\n      // Update the indicator before the below if statement can reset it back to 0\n      this.updateIndicator()\n\n      // Clear the timeout for the keypress timeout message clearing itself\n      if (this.timeoutMessageId) {\n        window.clearTimeout(this.timeoutMessageId)\n        this.timeoutMessageId = null\n      }\n\n      if (this.keypressCounter >= 3) {\n        this.keypressCounter = 0\n\n        if (this.keypressTimeoutId) {\n          window.clearTimeout(this.keypressTimeoutId)\n          this.keypressTimeoutId = null\n        }\n\n        this.exitPage()\n      } else {\n        if (this.keypressCounter === 1) {\n          this.$updateSpan.textContent = this.i18n.t('pressTwoMoreTimes')\n        } else {\n          this.$updateSpan.textContent = this.i18n.t('pressOneMoreTime')\n        }\n      }\n\n      this.setKeypressTimer()\n    } else if (this.keypressTimeoutId) {\n      // If the user pressed any key other than 'Shift', after having pressed\n      // 'Shift' and activating the timer, stop and reset the timer.\n      this.resetKeypressTimer()\n    }\n\n    // Keep track of whether the Shift modifier key was held during this keypress\n    this.lastKeyWasModified = event.shiftKey\n  }\n\n  /**\n   * Starts the 'quick escape' keyboard sequence timer.\n   *\n   * This can be invoked several times. We want this to be possible so that the\n   * timer is restarted each time the shortcut key is pressed (e.g. the user has\n   * up to n seconds between each keypress, rather than n seconds to invoke the\n   * entire sequence.)\n   *\n   * @private\n   */\n  setKeypressTimer() {\n    // Clear any existing timeout. This is so only one timer is running even if\n    // there are multiple keypresses in quick succession.\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    // Set a fresh timeout\n    this.keypressTimeoutId = window.setTimeout(\n      this.resetKeypressTimer.bind(this),\n      this.timeoutTime\n    )\n  }\n\n  /**\n   * Stops and resets the 'quick escape' keyboard sequence timer.\n   *\n   * @private\n   */\n  resetKeypressTimer() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n      this.keypressTimeoutId = null\n    }\n\n    const $updateSpan = this.$updateSpan\n\n    this.keypressCounter = 0\n    $updateSpan.textContent = this.i18n.t('timedOut')\n\n    this.timeoutMessageId = window.setTimeout(() => {\n      $updateSpan.textContent = ''\n    }, this.timeoutTime)\n\n    this.updateIndicator()\n  }\n\n  /**\n   * Reset the page using the EtP button\n   *\n   * We use this in situations where a user may re-enter a page using the browser\n   * back button. In these cases, the browser can choose to restore the state of\n   * the page as it was previously, including restoring the 'ghost page' overlay,\n   * the announcement span having it's role set to \"alert\" and the keypress\n   * indicator still active, leaving the page in an unusable state.\n   *\n   * By running this check when the page is shown, we can programatically restore\n   * the page and the component to a \"default\" state\n   *\n   * @private\n   */\n  resetPage() {\n    // If an overlay is set, remove it and reset the value\n    document.body.classList.remove('govuk-exit-this-page-hide-content')\n\n    if (this.$overlay) {\n      this.$overlay.remove()\n      this.$overlay = null\n    }\n\n    // Ensure the announcement span's role is status, not alert and clear any text\n    if (this.$updateSpan) {\n      this.$updateSpan.setAttribute('role', 'status')\n      this.$updateSpan.textContent = ''\n    }\n\n    // Sync the keypress indicator lights\n    this.updateIndicator()\n\n    // If the timeouts are active, clear them\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    if (this.timeoutMessageId) {\n      window.clearTimeout(this.timeoutMessageId)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-exit-this-page'\n\n  /**\n   * Exit this page default config\n   *\n   * @see {@link ExitThisPageConfig}\n   * @constant\n   * @type {ExitThisPageConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  })\n\n  /**\n   * Exit this page config schema\n   *\n   * @constant\n   * @satisfies {Schema<ExitThisPageConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Exit this Page config\n *\n * @see {@link ExitThisPage.defaults}\n * @typedef {object} ExitThisPageConfig\n * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n */\n\n/**\n * Exit this Page translations\n *\n * @see {@link ExitThisPage.defaults.i18n}\n * @typedef {object} ExitThisPageTranslations\n *\n * Messages used by the component programatically inserted text, including\n * overlay text and screen reader announcements.\n * @property {string} [activated] - Screen reader announcement for when EtP\n *   keypress functionality has been successfully activated.\n * @property {string} [timedOut] - Screen reader announcement for when the EtP\n *   keypress functionality has timed out.\n * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n *   the user they must press the activation key two more times.\n * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n *   the user they must press the activation key one more time.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * File upload component\n *\n * @preserve\n * @augments ConfigurableComponent<FileUploadConfig>\n */\nexport class FileUpload extends ConfigurableComponent {\n  /**\n   * @private\n   * @type {HTMLFileInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   */\n  $button\n\n  /**\n   * @private\n   */\n  $status\n\n  /** @private */\n  i18n\n\n  /** @private */\n  id\n\n  /** @private */\n  $announcements\n\n  /**\n   * @private\n   * @type {boolean | undefined}\n   */\n  enteredAnotherElement\n\n  /**\n   * @param {Element | null} $root - File input element\n   * @param {FileUploadConfig} [config] - File Upload config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $input = this.$root.querySelector('input')\n\n    if ($input === null) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File inputs (`<input type=\"file\">`)'\n      })\n    }\n\n    if ($input.type !== 'file') {\n      throw new ElementError(\n        formatErrorMessage(\n          FileUpload,\n          'File input (`<input type=\"file\">`) attribute (`type`) is not `file`'\n        )\n      )\n    }\n\n    this.$input = /** @type {HTMLFileInputElement} */ ($input)\n    this.$input.setAttribute('hidden', 'true')\n\n    if (!this.$input.id) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File input (`<input type=\"file\">`) attribute (`id`)'\n      })\n    }\n\n    this.id = this.$input.id\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    const $label = this.findLabel()\n    // Add an ID to the label if it doesn't have one already\n    // so it can be referenced by `aria-labelledby`\n    if (!$label.id) {\n      $label.id = `${this.id}-label`\n    }\n\n    // we need to copy the 'id' of the root element\n    // to the new button replacement element\n    // so that focus will work in the error summary\n    this.$input.id = `${this.id}-input`\n\n    // Create the file selection button\n    const $button = document.createElement('button')\n    $button.classList.add('govuk-file-upload-button')\n    $button.type = 'button'\n    $button.id = this.id\n    $button.classList.add('govuk-file-upload-button--empty')\n\n    // Copy `aria-describedby` if present so hints and errors\n    // are associated to the `<button>`\n    const ariaDescribedBy = this.$input.getAttribute('aria-describedby')\n    if (ariaDescribedBy) {\n      $button.setAttribute('aria-describedby', ariaDescribedBy)\n    }\n\n    // Create status element that shows what/how many files are selected\n    const $status = document.createElement('span')\n    $status.className = 'govuk-body govuk-file-upload-button__status'\n    $status.setAttribute('aria-live', 'polite')\n    $status.innerText = this.i18n.t('noFileChosen')\n\n    $button.appendChild($status)\n\n    const commaSpan = document.createElement('span')\n    commaSpan.className = 'govuk-visually-hidden'\n    commaSpan.innerText = ', '\n    commaSpan.id = `${this.id}-comma`\n\n    $button.appendChild(commaSpan)\n\n    const containerSpan = document.createElement('span')\n    containerSpan.className =\n      'govuk-file-upload-button__pseudo-button-container'\n\n    const buttonSpan = document.createElement('span')\n    buttonSpan.className =\n      'govuk-button govuk-button--secondary govuk-file-upload-button__pseudo-button'\n    buttonSpan.innerText = this.i18n.t('chooseFilesButton')\n\n    containerSpan.appendChild(buttonSpan)\n\n    // Add a space so the button and instruction read correctly\n    // when CSS is disabled\n    containerSpan.insertAdjacentText('beforeend', ' ')\n\n    const instructionSpan = document.createElement('span')\n    instructionSpan.className =\n      'govuk-body govuk-file-upload-button__instruction'\n    instructionSpan.innerText = this.i18n.t('dropInstruction')\n\n    containerSpan.appendChild(instructionSpan)\n\n    $button.appendChild(containerSpan)\n    $button.setAttribute(\n      'aria-labelledby',\n      `${$label.id} ${commaSpan.id} ${$button.id}`\n    )\n    $button.addEventListener('click', this.onClick.bind(this))\n    $button.addEventListener('dragover', (event) => {\n      // prevent default to allow drop\n      event.preventDefault()\n    })\n\n    // Assemble these all together\n    this.$root.insertAdjacentElement('afterbegin', $button)\n\n    this.$input.setAttribute('tabindex', '-1')\n    this.$input.setAttribute('aria-hidden', 'true')\n\n    // Make all these new variables available to the module\n    this.$button = $button\n    this.$status = $status\n\n    // Bind change event to the underlying input\n    this.$input.addEventListener('change', this.onChange.bind(this))\n\n    // Synchronise the `disabled` state between the button and underlying input\n    this.updateDisabledState()\n    this.observeDisabledState()\n\n    // Handle drop zone visibility\n    // A live region to announce when users enter or leave the drop zone\n    this.$announcements = document.createElement('span')\n    this.$announcements.classList.add('govuk-file-upload-announcements')\n    this.$announcements.classList.add('govuk-visually-hidden')\n    this.$announcements.setAttribute('aria-live', 'assertive')\n    this.$root.insertAdjacentElement('afterend', this.$announcements)\n\n    // if there is no CSS and input is hidden\n    // button will need to handle drop event\n    this.$button.addEventListener('drop', this.onDrop.bind(this))\n\n    // While user is dragging, it gets a little more complex because of Safari.\n    // Safari doesn't fill `relatedTarget` on `dragleave` (nor `dragenter`).\n    // This means we can't use `relatedTarget` to:\n    // - check if the user is still within the wrapper\n    //   (`relatedTarget` being a descendant of the wrapper)\n    // - check if the user is still over the viewport\n    //   (`relatedTarget` being null if outside)\n\n    // Thanks to `dragenter` bubbling, we can listen on the `document` with a\n    // single function and update the visibility based on whether we entered a\n    // node inside or outside the wrapper.\n    document.addEventListener(\n      'dragenter',\n      this.updateDropzoneVisibility.bind(this)\n    )\n\n    // To detect if we're outside the document, we can track if there was a\n    // `dragenter` event preceding a `dragleave`. If there wasn't, this means\n    // we're outside the document.\n    //\n    // The order of events is guaranteed by the HTML specs:\n    // https://html.spec.whatwg.org/multipage/dnd.html#drag-and-drop-processing-model\n    document.addEventListener('dragenter', () => {\n      this.enteredAnotherElement = true\n    })\n\n    document.addEventListener('dragleave', () => {\n      if (!this.enteredAnotherElement && !this.$button.disabled) {\n        this.hideDraggingState()\n        this.$announcements.innerText = this.i18n.t('leftDropZone')\n      }\n\n      this.enteredAnotherElement = false\n    })\n  }\n\n  /**\n   * Updates the visibility of the dropzone as users enters the various elements on the page\n   *\n   * @private\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  updateDropzoneVisibility(event) {\n    if (this.$button.disabled) return\n\n    // DOM interfaces only type `event.target` as `EventTarget`\n    // so we first need to make sure it's a `Node`\n    if (event.target instanceof Node) {\n      if (this.$root.contains(event.target)) {\n        if (event.dataTransfer && isContainingFiles(event.dataTransfer)) {\n          // Only update the class and make the announcement if not already visible\n          // to avoid repeated announcements on NVDA (2024.4) + Firefox (133)\n          if (\n            !this.$button.classList.contains(\n              'govuk-file-upload-button--dragging'\n            )\n          ) {\n            this.showDraggingState()\n            this.$announcements.innerText = this.i18n.t('enteredDropZone')\n          }\n        }\n      } else {\n        // Only hide the dropzone if it is visible to prevent announcing user\n        // left the drop zone when they enter the page but haven't reached yet\n        // the file upload component\n        if (\n          this.$button.classList.contains('govuk-file-upload-button--dragging')\n        ) {\n          this.hideDraggingState()\n          this.$announcements.innerText = this.i18n.t('leftDropZone')\n        }\n      }\n    }\n  }\n\n  /**\n   * Show the drop zone visually\n   *\n   * @private\n   */\n  showDraggingState() {\n    this.$button.classList.add('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Hides the drop zone visually\n   *\n   * @private\n   */\n  hideDraggingState() {\n    this.$button.classList.remove('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Handles user dropping on the component\n   *\n   * @private\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  onDrop(event) {\n    event.preventDefault()\n\n    if (event.dataTransfer && isContainingFiles(event.dataTransfer)) {\n      this.$input.files = event.dataTransfer.files\n\n      // Dispatch a `change` event so external code that would rely on the `<input>`\n      // dispatching an event when files are dropped still work.\n      // Use a `CustomEvent` so our events are distinguishable from browser's native events\n      this.$input.dispatchEvent(new CustomEvent('change'))\n\n      this.hideDraggingState()\n    }\n  }\n\n  /**\n   * Check if the value of the underlying input has changed\n   *\n   * @private\n   */\n  onChange() {\n    const fileCount = this.$input.files.length\n\n    if (fileCount === 0) {\n      // If there are no files, show the default selection text\n      this.$status.innerText = this.i18n.t('noFileChosen')\n      this.$button.classList.add('govuk-file-upload-button--empty')\n    } else {\n      if (\n        // If there is 1 file, just show the file name\n        fileCount === 1\n      ) {\n        this.$status.innerText = this.$input.files[0].name\n      } else {\n        // Otherwise, tell the user how many files are selected\n        this.$status.innerText = this.i18n.t('multipleFilesChosen', {\n          count: fileCount\n        })\n      }\n\n      this.$button.classList.remove('govuk-file-upload-button--empty')\n    }\n  }\n\n  /**\n   * Looks up the `<label>` element associated to the field\n   *\n   * @private\n   * @returns {HTMLElement} The `<label>` element associated to the field\n   * @throws {ElementError} If the `<label>` cannot be found\n   */\n  findLabel() {\n    // Use `label` in the selector so TypeScript knows the type fo `HTMLElement`\n    const $label = document.querySelector(`label[for=\"${this.$input.id}\"]`)\n\n    if (!$label) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: `Field label (\\`<label for=${this.$input.id}>\\`)`\n      })\n    }\n\n    return $label\n  }\n\n  /**\n   * When the button is clicked, emulate clicking the actual, hidden file input\n   *\n   * @private\n   */\n  onClick() {\n    this.$input.click()\n  }\n\n  /**\n   * Create a mutation observer to check if the input's attributes altered.\n   *\n   * @private\n   */\n  observeDisabledState() {\n    const observer = new MutationObserver((mutationList) => {\n      for (const mutation of mutationList) {\n        if (\n          mutation.type === 'attributes' &&\n          mutation.attributeName === 'disabled'\n        ) {\n          this.updateDisabledState()\n        }\n      }\n    })\n\n    observer.observe(this.$input, {\n      attributes: true\n    })\n  }\n\n  /**\n   * Synchronise the `disabled` state between the input and replacement button.\n   *\n   * @private\n   */\n  updateDisabledState() {\n    this.$button.disabled = this.$input.disabled\n\n    this.$root.classList.toggle(\n      'govuk-drop-zone--disabled',\n      this.$button.disabled\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-file-upload'\n\n  /**\n   * File upload default config\n   *\n   * @see {@link FileUploadConfig}\n   * @constant\n   * @type {FileUploadConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      chooseFilesButton: 'Choose file',\n      dropInstruction: 'or drop file',\n      noFileChosen: 'No file chosen',\n      multipleFilesChosen: {\n        // the 'one' string isn't used as the component displays the filename\n        // instead, however it's here for coverage's sake\n        one: '%{count} file chosen',\n        other: '%{count} files chosen'\n      },\n      enteredDropZone: 'Entered drop zone',\n      leftDropZone: 'Left drop zone'\n    }\n  })\n\n  /**\n   * File upload config schema\n   *\n   * @constant\n   * @satisfies {Schema<FileUploadConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Checks if the given `DataTransfer` contains files\n *\n * @internal\n * @param {DataTransfer} dataTransfer - The `DataTransfer` to check\n * @returns {boolean} - `true` if it contains files or we can't infer it, `false` otherwise\n */\nfunction isContainingFiles(dataTransfer) {\n  // Safari sometimes does not provide info about types :'(\n  // In which case best not to assume anything and try to set the files\n  const hasNoTypesInfo = dataTransfer.types.length === 0\n\n  // When dragging images, there's a mix of mime types + Files\n  // which we can't assign to the native input\n  const isDraggingFiles = dataTransfer.types.some((type) => type === 'Files')\n\n  return hasNoTypesInfo || isDraggingFiles\n}\n\n/**\n * @typedef {HTMLInputElement & {files: FileList}} HTMLFileInputElement\n */\n\n/**\n * File upload config\n *\n * @see {@link FileUpload.defaults}\n * @typedef {object} FileUploadConfig\n * @property {FileUploadTranslations} [i18n=FileUpload.defaults.i18n] - File upload translations\n */\n\n/**\n * File upload translations\n *\n * @see {@link FileUpload.defaults.i18n}\n * @typedef {object} FileUploadTranslations\n *\n * Messages used by the component\n * @property {string} [chooseFile] - The text of the button that opens the file picker\n * @property {string} [dropInstruction] - The text informing users they can drop files\n * @property {TranslationPluralForms} [multipleFilesChosen] - The text displayed when multiple files\n *   have been chosen by the user\n * @property {string} [noFileChosen] - The text to displayed when no file has been chosen by the user\n * @property {string} [enteredDropZone] - The text announced by assistive technology\n *   when user drags files and enters the drop zone\n * @property {string} [leftDropZone] - The text announced by assistive technology\n *   when user drags files and leaves the drop zone without dropping\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n */\n","import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Header component\n *\n * @preserve\n */\nexport class Header extends Component {\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to big and\n   * back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the\n   * browser viewport moves between states.\n   *\n   * @param {Element | null} $root - HTML element to use for header\n   */\n  constructor($root) {\n    super($root)\n\n    const $menuButton = this.$root.querySelector('.govuk-js-header-toggle')\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    // Pad the header logo so it doesn't overlap the menu button\n    this.$root.classList.add('govuk-header--with-js-navigation')\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        component: Header,\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-header-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        component: Header,\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('desktop')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: Header,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-header'\n}\n","import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { setFocus } from '../../common/index.mjs'\n\n/**\n * Notification Banner component\n *\n * @preserve\n * @augments ConfigurableComponent<NotificationBannerConfig>\n */\nexport class NotificationBanner extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for notification banner\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the notification banner\n     *\n     * If `role=\"alert\"` is set, focus the element to help some assistive\n     * technologies prioritise announcing it.\n     *\n     * You can turn off the auto-focus functionality by setting\n     * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n     * do this based on user research findings, or to avoid a clash with another\n     * element which should be focused when the page loads.\n     */\n    if (\n      this.$root.getAttribute('role') === 'alert' &&\n      !this.config.disableAutoFocus\n    ) {\n      setFocus(this.$root)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-notification-banner'\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Notification banner config schema\n   *\n   * @constant\n   * @satisfies {Schema<NotificationBannerConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` – in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Password input component\n *\n * @preserve\n * @augments ConfigurableComponent<PasswordInputConfig>\n */\nexport class PasswordInput extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /**\n   * @private\n   * @type {HTMLInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   * @type {HTMLButtonElement}\n   */\n  $showHideButton\n\n  /** @private */\n  $screenReaderStatusMessage\n\n  /**\n   * @param {Element | null} $root - HTML element to use for password input\n   * @param {PasswordInputConfig} [config] - Password input config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $input = this.$root.querySelector('.govuk-js-password-input-input')\n    if (!($input instanceof HTMLInputElement)) {\n      throw new ElementError({\n        component: PasswordInput,\n        element: $input,\n        expectedType: 'HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-password-input-input`)'\n      })\n    }\n\n    if ($input.type !== 'password') {\n      throw new ElementError(\n        'Password input: Form field (`.govuk-js-password-input-input`) must be of type `password`.'\n      )\n    }\n\n    const $showHideButton = this.$root.querySelector(\n      '.govuk-js-password-input-toggle'\n    )\n    if (!($showHideButton instanceof HTMLButtonElement)) {\n      throw new ElementError({\n        component: PasswordInput,\n        element: $showHideButton,\n        expectedType: 'HTMLButtonElement',\n        identifier: 'Button (`.govuk-js-password-input-toggle`)'\n      })\n    }\n\n    if ($showHideButton.type !== 'button') {\n      throw new ElementError(\n        'Password input: Button (`.govuk-js-password-input-toggle`) must be of type `button`.'\n      )\n    }\n\n    this.$input = $input\n    this.$showHideButton = $showHideButton\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    // Show the toggle button element\n    this.$showHideButton.removeAttribute('hidden')\n\n    // Create and append the status text for screen readers.\n    // This is injected between the input and button so that users get a sensible reading order if\n    // moving through the page content linearly:\n    // [password input] -> [your password is visible/hidden] -> [show/hide password]\n    const $screenReaderStatusMessage = document.createElement('div')\n    $screenReaderStatusMessage.className =\n      'govuk-password-input__sr-status govuk-visually-hidden'\n    $screenReaderStatusMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderStatusMessage = $screenReaderStatusMessage\n    this.$input.insertAdjacentElement('afterend', $screenReaderStatusMessage)\n\n    // Bind toggle button\n    this.$showHideButton.addEventListener('click', this.toggle.bind(this))\n\n    // Bind event to revert the password visibility to hidden\n    if (this.$input.form) {\n      this.$input.form.addEventListener('submit', () => this.hide())\n    }\n\n    // If the page is restored from bfcache and the password is visible, hide it again\n    window.addEventListener('pageshow', (event) => {\n      if (event.persisted && this.$input.type !== 'password') {\n        this.hide()\n      }\n    })\n\n    // Default the component to having the password hidden.\n    this.hide()\n  }\n\n  /**\n   * Toggle the visibility of the password input\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  toggle(event) {\n    event.preventDefault()\n\n    // If on this click, the field is type=\"password\", show the value\n    if (this.$input.type === 'password') {\n      this.show()\n      return\n    }\n\n    // Otherwise, hide it\n    // Being defensive - hiding should always be the default\n    this.hide()\n  }\n\n  /**\n   * Show the password input value in plain text.\n   *\n   * @private\n   */\n  show() {\n    this.setType('text')\n  }\n\n  /**\n   * Hide the password input value.\n   *\n   * @private\n   */\n  hide() {\n    this.setType('password')\n  }\n\n  /**\n   * Set the password input type\n   *\n   * @param {'text' | 'password'} type - Input type\n   * @private\n   */\n  setType(type) {\n    if (type === this.$input.type) {\n      return\n    }\n\n    // Update input type\n    this.$input.setAttribute('type', type)\n\n    const isHidden = type === 'password'\n    const prefixButton = isHidden ? 'show' : 'hide'\n    const prefixStatus = isHidden ? 'passwordHidden' : 'passwordShown'\n\n    // Update button text\n    this.$showHideButton.innerText = this.i18n.t(`${prefixButton}Password`)\n\n    // Update button aria-label\n    this.$showHideButton.setAttribute(\n      'aria-label',\n      this.i18n.t(`${prefixButton}PasswordAriaLabel`)\n    )\n\n    // Update status change text\n    this.$screenReaderStatusMessage.innerText = this.i18n.t(\n      `${prefixStatus}Announcement`\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-password-input'\n\n  /**\n   * Password input default config\n   *\n   * @see {@link PasswordInputConfig}\n   * @constant\n   * @default\n   * @type {PasswordInputConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      showPassword: 'Show',\n      hidePassword: 'Hide',\n      showPasswordAriaLabel: 'Show password',\n      hidePasswordAriaLabel: 'Hide password',\n      passwordShownAnnouncement: 'Your password is visible',\n      passwordHiddenAnnouncement: 'Your password is hidden'\n    }\n  })\n\n  /**\n   * Password input config schema\n   *\n   * @constant\n   * @satisfies {Schema<PasswordInputConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Password input config\n *\n * @typedef {object} PasswordInputConfig\n * @property {PasswordInputTranslations} [i18n=PasswordInput.defaults.i18n] - Password input translations\n */\n\n/**\n * Password input translations\n *\n * @see {@link PasswordInput.defaults.i18n}\n * @typedef {object} PasswordInputTranslations\n *\n * Messages displayed to the user indicating the state of the show/hide toggle.\n * @property {string} [showPassword] - Visible text of the button when the\n *   password is currently hidden. Plain text only.\n * @property {string} [hidePassword] - Visible text of the button when the\n *   password is currently visible. Plain text only.\n * @property {string} [showPasswordAriaLabel] - aria-label of the button when\n *   the password is currently hidden. Plain text only.\n * @property {string} [hidePasswordAriaLabel] - aria-label of the button when\n *   the password is currently visible. Plain text only.\n * @property {string} [passwordShownAnnouncement] - Screen reader\n *   announcement to make when the password has just become visible.\n *   Plain text only.\n * @property {string} [passwordHiddenAnnouncement] - Screen reader\n *   announcement to make when the password has just been hidden.\n *   Plain text only.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n","import { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Radios component\n *\n * @preserve\n */\nexport class Radios extends Component {\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block –\n   * for example, a radio for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the radio state.\n   *\n   * @param {Element | null} $root - HTML element to use for radios\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Radios,\n        identifier: 'Form inputs (`<input type=\"radio\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Radios,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this component.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-radios__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the component root – if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a\n   * radio under the root of another Radio component)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'radio'\n    ) {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    const $allInputs = document.querySelectorAll(\n      'input[type=\"radio\"][aria-controls]'\n    )\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-radios'\n}\n","import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Service Navigation component\n *\n * @preserve\n */\nexport class ServiceNavigation extends Component {\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Remember the open/closed state of the nav so we can maintain it when the\n   * screen is resized.\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for header\n   */\n  constructor($root) {\n    super($root)\n\n    const $menuButton = this.$root.querySelector(\n      '.govuk-js-service-navigation-toggle'\n    )\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-service-navigation-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-service-navigation'\n}\n","import { getFragmentFromUrl, setFocus } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Skip link component\n *\n * @preserve\n * @augments Component<HTMLAnchorElement>\n */\nexport class SkipLink extends Component {\n  static elementType = HTMLAnchorElement\n\n  /**\n   * @param {Element | null} $root - HTML element to use for skip link\n   * @throws {ElementError} when $root is not set or the wrong type\n   * @throws {ElementError} when $root.hash does not contain a hash\n   * @throws {ElementError} when the linked element is missing or the wrong type\n   */\n  constructor($root) {\n    super($root)\n\n    const hash = this.$root.hash\n    const href = this.$root.getAttribute('href') ?? ''\n\n    /** @type {URL | undefined} */\n    let url\n\n    /**\n     * Check for valid link URL\n     *\n     * {@link https://caniuse.com/url}\n     * {@link https://url.spec.whatwg.org}\n     *\n     */\n    try {\n      url = new window.URL(this.$root.href)\n    } catch (error) {\n      throw new ElementError(\n        `Skip link: Target link (\\`href=\"${href}\"\\`) is invalid`\n      )\n    }\n\n    // Return early for external URLs or links to other pages\n    if (\n      url.origin !== window.location.origin ||\n      url.pathname !== window.location.pathname\n    ) {\n      return\n    }\n\n    const linkedElementId = getFragmentFromUrl(hash)\n\n    // Check link path matching current page\n    if (!linkedElementId) {\n      throw new ElementError(\n        `Skip link: Target link (\\`href=\"${href}\"\\`) has no hash fragment`\n      )\n    }\n\n    const $linkedElement = document.getElementById(linkedElementId)\n\n    // Check for link target element\n    if (!$linkedElement) {\n      throw new ElementError({\n        component: SkipLink,\n        element: $linkedElement,\n        identifier: `Target content (\\`id=\"${linkedElementId}\"\\`)`\n      })\n    }\n\n    /**\n     * Focus the linked element on click\n     *\n     * Adds a helper CSS class to hide native focus styles,\n     * but removes it on blur to restore native focus styles\n     */\n    this.$root.addEventListener('click', () =>\n      setFocus($linkedElement, {\n        onBeforeFocus() {\n          $linkedElement.classList.add('govuk-skip-link-focused-element')\n        },\n        onBlur() {\n          $linkedElement.classList.remove('govuk-skip-link-focused-element')\n        }\n      })\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-skip-link'\n}\n","import { getBreakpoint, getFragmentFromUrl } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Tabs component\n *\n * @preserve\n */\nexport class Tabs extends Component {\n  /** @private */\n  $tabs\n\n  /** @private */\n  $tabList\n\n  /** @private */\n  $tabListItems\n\n  /** @private */\n  jsHiddenClass = 'govuk-tabs__panel--hidden'\n\n  /** @private */\n  changingHash = false\n\n  /** @private */\n  boundTabClick\n\n  /** @private */\n  boundTabKeydown\n\n  /** @private */\n  boundOnHashChange\n\n  /**\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for tabs\n   */\n  constructor($root) {\n    super($root)\n\n    const $tabs = this.$root.querySelectorAll('a.govuk-tabs__tab')\n    if (!$tabs.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'Links (`<a class=\"govuk-tabs__tab\">`)'\n      })\n    }\n\n    this.$tabs = $tabs\n\n    // Save bound functions so we can remove event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    const $tabList = this.$root.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$root.querySelectorAll(\n      'li.govuk-tabs__list-item'\n    )\n\n    if (!$tabList) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List (`<ul class=\"govuk-tabs__list\">`)'\n      })\n    }\n\n    if (!$tabListItems.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List items (`<li class=\"govuk-tabs__list-item\">`)'\n      })\n    }\n\n    this.$tabList = $tabList\n    this.$tabListItems = $tabListItems\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend tablet breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   *\n   * @private\n   */\n  checkMode() {\n    if (this.mql?.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   *\n   * @private\n   */\n  setup() {\n    this.$tabList.setAttribute('role', 'tablist')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) ?? this.$tabs[0]\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   *\n   * @private\n   */\n  teardown() {\n    this.$tabList.removeAttribute('role')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   *\n   * @private\n   * @returns {void | undefined} Returns void, or undefined when prevented\n   */\n  onHashChange() {\n    const hash = window.location.hash\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @private\n   * @param {string} hash - Hash fragment including #\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getTab(hash) {\n    return this.$root.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes($tab) {\n    const panelId = getFragmentFromUrl($tab.href)\n    if (!panelId) {\n      return\n    }\n\n    // Set tab attributes\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // Set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {void} Returns void\n   */\n  onTabClick(event) {\n    const $currentTab = this.getCurrentTab()\n    const $nextTab = event.currentTarget\n\n    if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id so the page doesn't jump when a user clicks a tab\n    // (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = panelId\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right arrow for next tab\n   * - Press left arrow for previous tab\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown(event) {\n    switch (event.key) {\n      // 'Left' and 'Right' required for Edge 16 support.\n      case 'ArrowLeft':\n      case 'Left':\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case 'ArrowRight':\n      case 'Right':\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   *\n   * @private\n   */\n  activateNextTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   *\n   * @private\n   */\n  activatePreviousTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $previousTabListItem =\n      $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {Element | null} Tab panel\n   */\n  getPanel($tab) {\n    const panelId = getFragmentFromUrl($tab.href)\n    if (!panelId) {\n      return null\n    }\n\n    return this.$root.querySelector(`#${panelId}`)\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   *\n   * @private\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getCurrentTab() {\n    return this.$root.querySelector(\n      '.govuk-tabs__list-item--selected a.govuk-tabs__tab'\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-tabs'\n}\n","import { isSupported } from './common/index.mjs'\nimport { Accordion } from './components/accordion/accordion.mjs'\nimport { Button } from './components/button/button.mjs'\nimport { CharacterCount } from './components/character-count/character-count.mjs'\nimport { Checkboxes } from './components/checkboxes/checkboxes.mjs'\nimport { ErrorSummary } from './components/error-summary/error-summary.mjs'\nimport { ExitThisPage } from './components/exit-this-page/exit-this-page.mjs'\nimport { FileUpload } from './components/file-upload/file-upload.mjs'\nimport { Header } from './components/header/header.mjs'\nimport { NotificationBanner } from './components/notification-banner/notification-banner.mjs'\nimport { PasswordInput } from './components/password-input/password-input.mjs'\nimport { Radios } from './components/radios/radios.mjs'\nimport { ServiceNavigation } from './components/service-navigation/service-navigation.mjs'\nimport { SkipLink } from './components/skip-link/skip-link.mjs'\nimport { Tabs } from './components/tabs/tabs.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find, instantiate and init all of the\n * components provided as part of GOV.UK Frontend.\n *\n * @param {Config & { scope?: Element, onError?: OnErrorCallback<CompatibleClass> }} [config] - Config for all components (with optional scope)\n */\nfunction initAll(config) {\n  config = typeof config !== 'undefined' ? config : {}\n\n  // Skip initialisation when GOV.UK Frontend is not supported\n  if (!isSupported()) {\n    if (config.onError) {\n      config.onError(new SupportError(), {\n        config\n      })\n    } else {\n      console.log(new SupportError())\n    }\n    return\n  }\n\n  const components = /** @type {const} */ ([\n    [Accordion, config.accordion],\n    [Button, config.button],\n    [CharacterCount, config.characterCount],\n    [Checkboxes],\n    [ErrorSummary, config.errorSummary],\n    [ExitThisPage, config.exitThisPage],\n    [FileUpload, config.fileUpload],\n    [Header],\n    [NotificationBanner, config.notificationBanner],\n    [PasswordInput, config.passwordInput],\n    [Radios],\n    [ServiceNavigation],\n    [SkipLink],\n    [Tabs]\n  ])\n\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n  // Defaults to the entire document if nothing is set.\n  // const $scope = config.scope ?? document\n\n  const options = {\n    scope: config.scope ?? document,\n    onError: config.onError\n  }\n\n  components.forEach(([Component, config]) => {\n    createAll(Component, config, options)\n  })\n}\n\n/**\n * Create all instances of a specific component on the page\n *\n * Uses the `data-module` attribute to find all elements matching the specified\n * component on the page, creating instances of the component object for each\n * of them.\n *\n * Any component errors will be caught and logged to the console.\n *\n * @template {CompatibleClass} ComponentClass\n * @param {ComponentClass} Component - class of the component to create\n * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n * @param {OnErrorCallback<ComponentClass> | Element | Document | CreateAllOptions<ComponentClass> } [createAllOptions] - options for createAll including scope of the document to search within and callback function if error throw by component on init\n * @returns {Array<InstanceType<ComponentClass>>} - array of instantiated components\n */\nfunction createAll(Component, config, createAllOptions) {\n  let /** @type {Element | Document} */ $scope = document\n  let /** @type {OnErrorCallback<Component> | undefined} */ onError\n\n  if (typeof createAllOptions === 'object') {\n    createAllOptions = /** @type {CreateAllOptions<Component>} */ (\n      // eslint-disable-next-line no-self-assign\n      createAllOptions\n    )\n\n    $scope = createAllOptions.scope ?? $scope\n    onError = createAllOptions.onError\n  }\n\n  if (typeof createAllOptions === 'function') {\n    onError = createAllOptions\n  }\n\n  if (createAllOptions instanceof HTMLElement) {\n    $scope = createAllOptions\n  }\n\n  const $elements = $scope.querySelectorAll(\n    `[data-module=\"${Component.moduleName}\"]`\n  )\n\n  // Skip initialisation when GOV.UK Frontend is not supported\n  if (!isSupported()) {\n    if (onError) {\n      onError(new SupportError(), {\n        component: Component,\n        config\n      })\n    } else {\n      console.log(new SupportError())\n    }\n    return []\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-unsafe-return --\n   * We can't define CompatibleClass as `{new(): CompatibleClass, moduleName: string}`,\n   * as when doing `typeof Accordion` (or any component), TypeScript doesn't seem\n   * to acknowledge the static `moduleName` that's set in our component classes.\n   * This means we have to set the constructor of `CompatibleClass` as `{new(): any}`,\n   * leading to ESLint frowning that we're returning `any[]`.\n   */\n  return Array.from($elements)\n    .map(($element) => {\n      try {\n        // Only pass config to components that accept it\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return typeof config !== 'undefined'\n          ? new Component($element, config)\n          : new Component($element)\n      } catch (error) {\n        if (onError) {\n          onError(error, {\n            element: $element,\n            component: Component,\n            config\n          })\n        } else {\n          console.log(error)\n        }\n\n        return null\n      }\n    })\n    .filter(Boolean) // Exclude components that errored\n}\n\nexport { initAll, createAll }\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): object}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * @typedef {{new (...args: any[]): any, moduleName: string}} CompatibleClass\n */\n\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * Config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {AccordionConfig} [accordion] - Accordion config\n * @property {ButtonConfig} [button] - Button config\n * @property {CharacterCountConfig} [characterCount] - Character Count config\n * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n * @property {FileUploadConfig} [fileUpload] - File Upload config\n * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n * @property {PasswordInputConfig} [passwordInput] - Password input config\n */\n\n/**\n * Config for individual components\n *\n * @import { AccordionConfig } from './components/accordion/accordion.mjs'\n * @import { ButtonConfig } from './components/button/button.mjs'\n * @import { CharacterCountConfig } from './components/character-count/character-count.mjs'\n * @import { ErrorSummaryConfig } from './components/error-summary/error-summary.mjs'\n * @import { ExitThisPageConfig } from './components/exit-this-page/exit-this-page.mjs'\n * @import { NotificationBannerConfig } from './components/notification-banner/notification-banner.mjs'\n * @import { PasswordInputConfig } from './components/password-input/password-input.mjs'\n * @import { FileUploadConfig } from './components/file-upload/file-upload.mjs'\n */\n\n/**\n * Component config keys, e.g. `accordion` and `characterCount`\n *\n * @typedef {keyof Config} ConfigKey\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {ConstructorParameters<ComponentClass>[1]} ComponentConfig\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} ErrorContext\n * @property {Element} [element] - Element used for component module initialisation\n * @property {ComponentClass} [component] - Class of component\n * @property {ComponentConfig<ComponentClass>} config - Config supplied to component\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @callback OnErrorCallback\n * @param {unknown} error - Thrown error\n * @param {ErrorContext<ComponentClass>} context - Object containing the element, component class and configuration\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} CreateAllOptions\n * @property {Element | Document} [scope] - scope of the document to search within\n * @property {OnErrorCallback<ComponentClass>} [onError] - callback function if error throw by component on init\n */\n"],"names":["version","getFragmentFromUrl","url","includes","undefined","split","pop","getBreakpoint","name","property","value","window","getComputedStyle","document","documentElement","getPropertyValue","setFocus","$element","options","_options$onBeforeFocu","isFocusable","getAttribute","setAttribute","onFocus","addEventListener","onBlur","once","_options$onBlur","call","removeAttribute","onBeforeFocus","focus","isInitialised","$root","moduleName","HTMLElement","hasAttribute","isSupported","$scope","body","classList","contains","isArray","option","Array","isObject","formatErrorMessage","Component","message","GOVUKFrontendError","Error","constructor","args","SupportError","supportMessage","HTMLScriptElement","prototype","ConfigError","ElementError","messageOrOptions","component","identifier","element","expectedType","InitError","componentOrMessage","_$root","childConstructor","elementType","checkSupport","checkInitialised","configOverride","Symbol","for","ConfigurableComponent","param","config","_config","defaults","datasetConfig","normaliseDataset","dataset","mergeConfigs","normaliseString","trimmedValue","trim","output","outputType","type","length","isFinite","Number","schema","out","entries","Object","properties","entry","namespace","field","toString","extractConfigByNamespace","configObjects","formattedConfigObject","configObject","key","keys","override","validateConfig","validationErrors","conditions","errors","required","errorMessage","every","push","newObject","current","keyParts","index","I18n","translations","_config$locale","locale","lang","t","lookupKey","translation","count","translationPluralForm","getPluralSuffix","match","replacePlaceholders","translationString","formatter","Intl","NumberFormat","supportedLocalesOf","replace","placeholderWithBraces","placeholderKey","hasOwnProperty","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","PluralRules","preferredForm","select","selectPluralFormUsingFallbackRules","console","warn","Math","abs","floor","ruleset","getPluralRulesForLocale","pluralRules","localeShort","pluralRule","pluralRulesMap","languages","arabic","chinese","french","german","irish","russian","scottish","spanish","welsh","n","lastTwo","last","Accordion","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","$showAllButton","$showAllIcon","$showAllText","querySelectorAll","initControls","initSectionHeaders","updateShowAllButton","areAllSectionsOpen","createElement","add","appendChild","$accordionControls","insertBefore","firstChild","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","i","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","$span","$heading","$summary","$button","id","attr","from","attributes","$headingText","$headingTextFocus","childNodes","$child","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","$summarySpan","$summarySpanFocus","remove","removeChild","$fragment","target","Element","closest","nowExpanded","storeState","expanded","$content","newButtonText","textContent","ariaLabelParts","ariaLabelMessage","join","toggle","getIdentifier","rememberExpanded","sessionStorage","setItem","exception","state","getItem","$punctuationEl","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","DEBOUNCE_TIMEOUT_IN_SECONDS","Button","debounceFormSubmitTimer","handleKeyDown","debounce","$target","preventDefault","click","preventDoubleClick","setTimeout","closestAttributeValue","attributeName","$closestElementWithAttribute","CharacterCount","configOverrides","maxlength","maxwords","_ref","_this$config$maxwords","$textarea","$visibleCountMessage","$screenReaderCountMessage","lastInputTimestamp","lastInputValue","valueChecker","maxLength","HTMLTextAreaElement","HTMLInputElement","Infinity","textareaDescriptionId","$textareaDescription","getElementById","$errorMessage","insertAdjacentElement","className","bindChangeEvents","updateCountMessage","handleKeyUp","handleFocus","handleBlur","updateVisibleCountMessage","Date","now","setInterval","updateIfValueChanged","clearInterval","updateScreenReaderCountMessage","remainingNumber","isError","isOverThreshold","getCountMessage","text","_text$match","tokens","countType","formatCountMessage","translationKeySuffix","threshold","currentLength","thresholdValue","charactersUnderLimit","one","other","charactersAtLimit","charactersOverLimit","wordsUnderLimit","wordsAtLimit","wordsOverLimit","textareaDescription","anyOf","Checkboxes","$inputs","$input","targetId","syncAllConditionalReveals","handleClick","syncConditionalRevealWithInputState","inputIsChecked","checked","unCheckAllInputsExcept","allInputsWithSameName","$inputWithSameName","hasSameFormOwner","form","unCheckExclusiveInputs","allInputsWithSameNameAndExclusiveBehaviour","$exclusiveInput","$clickedInput","hasAriaControls","hasBehaviourExclusive","ErrorSummary","disableAutoFocus","focusTarget","HTMLAnchorElement","inputId","href","$legendOrLabel","getAssociatedLegendOrLabel","scrollIntoView","preventScroll","_document$querySelect","$fieldset","$legends","getElementsByTagName","$candidateLegend","legendTop","getBoundingClientRect","top","inputRect","height","innerHeight","inputBottom","ExitThisPage","$skiplinkButton","$updateSpan","$indicatorContainer","$overlay","keypressCounter","lastKeyWasModified","timeoutTime","keypressTimeoutId","timeoutMessageId","buildIndicator","initUpdateSpan","initButtonClickHandler","handleKeypress","bind","govukFrontendExitThisPageKeypress","resetPage","$indicator","updateIndicator","$indicators","exitPage","location","clearTimeout","setKeypressTimer","resetKeypressTimer","shiftKey","activated","timedOut","pressTwoMoreTimes","pressOneMoreTime","FileUpload","$status","$announcements","enteredAnotherElement","$label","findLabel","ariaDescribedBy","innerText","commaSpan","containerSpan","buttonSpan","insertAdjacentText","instructionSpan","onClick","onChange","updateDisabledState","observeDisabledState","onDrop","updateDropzoneVisibility","disabled","hideDraggingState","Node","dataTransfer","isContainingFiles","showDraggingState","files","dispatchEvent","CustomEvent","fileCount","observer","MutationObserver","mutationList","mutation","observe","chooseFilesButton","dropInstruction","noFileChosen","multipleFilesChosen","enteredDropZone","leftDropZone","hasNoTypesInfo","types","isDraggingFiles","some","Header","$menuButton","$menu","menuIsOpen","mql","menuId","setupResponsiveChecks","handleMenuButtonClick","breakpoint","matchMedia","checkMode","addListener","matches","NotificationBanner","PasswordInput","$showHideButton","$screenReaderStatusMessage","HTMLButtonElement","hide","persisted","show","setType","isHidden","prefixButton","prefixStatus","showPassword","hidePassword","showPasswordAriaLabel","hidePasswordAriaLabel","passwordShownAnnouncement","passwordHiddenAnnouncement","Radios","$allInputs","$clickedInputForm","$clickedInputName","hasSameName","ServiceNavigation","SkipLink","_this$$root$getAttrib","hash","URL","error","origin","pathname","linkedElementId","$linkedElement","Tabs","$tabs","$tabList","$tabListItems","jsHiddenClass","changingHash","boundTabClick","boundTabKeydown","boundOnHashChange","onTabClick","onTabKeydown","onHashChange","_this$mql","setup","teardown","_this$getTab","$item","$tab","setAttributes","hideTab","$activeTab","getTab","showTab","removeEventListener","unsetAttributes","$tabWithHash","$previousTab","getCurrentTab","unhighlightTab","hidePanel","highlightTab","showPanel","panelId","$panel","getPanel","$currentTab","$nextTab","currentTarget","createHistoryEntry","activatePreviousTab","activateNextTab","parentElement","$nextTabListItem","nextElementSibling","$previousTabListItem","previousElementSibling","initAll","_config$scope","onError","log","components","accordion","button","characterCount","errorSummary","exitThisPage","fileUpload","notificationBanner","passwordInput","scope","createAll","createAllOptions","_createAllOptions$sco","$elements","map","filter"],"mappings":"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"}