{"version":3,"file":"file-upload.mjs","sources":["../../../../src/govuk/components/file-upload/file-upload.mjs"],"sourcesContent":["import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * File upload component\n *\n * @preserve\n * @augments ConfigurableComponent<FileUploadConfig>\n */\nexport class FileUpload extends ConfigurableComponent {\n  /**\n   * @private\n   * @type {HTMLFileInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   */\n  $button\n\n  /**\n   * @private\n   */\n  $status\n\n  /** @private */\n  i18n\n\n  /** @private */\n  id\n\n  /**\n   * @param {Element | null} $root - File input element\n   * @param {FileUploadConfig} [config] - File Upload config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $input = this.$root.querySelector('input')\n\n    if ($input === null) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File inputs (`<input type=\"file\">`)'\n      })\n    }\n\n    if ($input.type !== 'file') {\n      throw new ElementError(\n        formatErrorMessage(\n          FileUpload,\n          'File input (`<input type=\"file\">`) attribute (`type`) is not `file`'\n        )\n      )\n    }\n\n    this.$input = /** @type {HTMLFileInputElement} */ ($input)\n    this.$input.setAttribute('hidden', 'true')\n\n    if (!this.$input.id) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File input (`<input type=\"file\">`) attribute (`id`)'\n      })\n    }\n\n    this.id = this.$input.id\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    const $label = this.findLabel()\n    // Add an ID to the label if it doesn't have one already\n    // so it can be referenced by `aria-labelledby`\n    if (!$label.id) {\n      $label.id = `${this.id}-label`\n    }\n\n    // we need to copy the 'id' of the root element\n    // to the new button replacement element\n    // so that focus will work in the error summary\n    this.$input.id = `${this.id}-input`\n\n    // Create the file selection button\n    const $button = document.createElement('button')\n    $button.classList.add('govuk-file-upload-button')\n    $button.type = 'button'\n    $button.id = this.id\n    $button.classList.add('govuk-file-upload-button--empty')\n\n    // Copy `aria-describedby` if present so hints and errors\n    // are associated to the `<button>`\n    const ariaDescribedBy = this.$input.getAttribute('aria-describedby')\n    if (ariaDescribedBy) {\n      $button.setAttribute('aria-describedby', ariaDescribedBy)\n    }\n\n    // Create status element that shows what/how many files are selected\n    const $status = document.createElement('span')\n    $status.className = 'govuk-body govuk-file-upload-button__status'\n    $status.setAttribute('aria-live', 'polite')\n    $status.innerText = this.i18n.t('noFileChosen')\n\n    $button.appendChild($status)\n\n    const commaSpan = document.createElement('span')\n    commaSpan.className = 'govuk-visually-hidden'\n    commaSpan.innerText = ', '\n    commaSpan.id = `${this.id}-comma`\n\n    $button.appendChild(commaSpan)\n\n    const containerSpan = document.createElement('span')\n    containerSpan.className =\n      'govuk-file-upload-button__pseudo-button-container'\n\n    const buttonSpan = document.createElement('span')\n    buttonSpan.className =\n      'govuk-button govuk-button--secondary govuk-file-upload-button__pseudo-button'\n    buttonSpan.innerText = this.i18n.t('chooseFilesButton')\n\n    containerSpan.appendChild(buttonSpan)\n\n    // Add a space so the button and instruction read correctly\n    // when CSS is disabled\n    containerSpan.insertAdjacentText('beforeend', ' ')\n\n    const instructionSpan = document.createElement('span')\n    instructionSpan.className =\n      'govuk-body govuk-file-upload-button__instruction'\n    instructionSpan.innerText = this.i18n.t('dropInstruction')\n\n    containerSpan.appendChild(instructionSpan)\n\n    $button.appendChild(containerSpan)\n    $button.setAttribute(\n      'aria-labelledby',\n      `${$label.id} ${commaSpan.id} ${$button.id}`\n    )\n    $button.addEventListener('click', this.onClick.bind(this))\n    $button.addEventListener('dragover', (event) => {\n      // prevent default to allow drop\n      event.preventDefault()\n    })\n\n    // Assemble these all together\n    this.$root.insertAdjacentElement('afterbegin', $button)\n\n    this.$input.setAttribute('tabindex', '-1')\n    this.$input.setAttribute('aria-hidden', 'true')\n\n    // Make all these new variables available to the module\n    this.$button = $button\n    this.$status = $status\n\n    // Bind change event to the underlying input\n    this.$input.addEventListener('change', this.onChange.bind(this))\n\n    // Synchronise the `disabled` state between the button and underlying input\n    this.updateDisabledState()\n    this.observeDisabledState()\n\n    // Handle drop zone visibility\n    // A live region to announce when users enter or leave the drop zone\n    this.$announcements = document.createElement('span')\n    this.$announcements.classList.add('govuk-file-upload-announcements')\n    this.$announcements.classList.add('govuk-visually-hidden')\n    this.$announcements.setAttribute('aria-live', 'assertive')\n    this.$root.insertAdjacentElement('afterend', this.$announcements)\n\n    // if there is no CSS and input is hidden\n    // button will need to handle drop event\n    this.$button.addEventListener('drop', this.onDrop.bind(this))\n\n    // While user is dragging, it gets a little more complex because of Safari.\n    // Safari doesn't fill `relatedTarget` on `dragleave` (nor `dragenter`).\n    // This means we can't use `relatedTarget` to:\n    // - check if the user is still within the wrapper\n    //   (`relatedTarget` being a descendant of the wrapper)\n    // - check if the user is still over the viewport\n    //   (`relatedTarget` being null if outside)\n\n    // Thanks to `dragenter` bubbling, we can listen on the `document` with a\n    // single function and update the visibility based on whether we entered a\n    // node inside or outside the wrapper.\n    document.addEventListener(\n      'dragenter',\n      this.updateDropzoneVisibility.bind(this)\n    )\n\n    // To detect if we're outside the document, we can track if there was a\n    // `dragenter` event preceding a `dragleave`. If there wasn't, this means\n    // we're outside the document.\n    //\n    // The order of events is guaranteed by the HTML specs:\n    // https://html.spec.whatwg.org/multipage/dnd.html#drag-and-drop-processing-model\n    document.addEventListener('dragenter', () => {\n      this.enteredAnotherElement = true\n    })\n\n    document.addEventListener('dragleave', () => {\n      if (!this.enteredAnotherElement && !this.$button.disabled) {\n        this.hideDraggingState()\n        this.$announcements.innerText = this.i18n.t('leftDropZone')\n      }\n\n      this.enteredAnotherElement = false\n    })\n  }\n\n  /**\n   * Updates the visibility of the dropzone as users enters the various elements on the page\n   *\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  updateDropzoneVisibility(event) {\n    if (this.$button.disabled) return\n\n    // DOM interfaces only type `event.target` as `EventTarget`\n    // so we first need to make sure it's a `Node`\n    if (event.target instanceof Node) {\n      if (this.$root.contains(event.target)) {\n        if (event.dataTransfer && isContainingFiles(event.dataTransfer)) {\n          // Only update the class and make the announcement if not already visible\n          // to avoid repeated announcements on NVDA (2024.4) + Firefox (133)\n          if (\n            !this.$button.classList.contains(\n              'govuk-file-upload-button--dragging'\n            )\n          ) {\n            this.showDraggingState()\n            this.$announcements.innerText = this.i18n.t('enteredDropZone')\n          }\n        }\n      } else {\n        // Only hide the dropzone if it is visible to prevent announcing user\n        // left the drop zone when they enter the page but haven't reached yet\n        // the file upload component\n        if (\n          this.$button.classList.contains('govuk-file-upload-button--dragging')\n        ) {\n          this.hideDraggingState()\n          this.$announcements.innerText = this.i18n.t('leftDropZone')\n        }\n      }\n    }\n  }\n\n  /**\n   * Show the drop zone visually\n   */\n  showDraggingState() {\n    this.$button.classList.add('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Hides the drop zone visually\n   */\n  hideDraggingState() {\n    this.$button.classList.remove('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Handles user dropping on the component\n   *\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  onDrop(event) {\n    event.preventDefault()\n\n    if (event.dataTransfer && isContainingFiles(event.dataTransfer)) {\n      this.$input.files = event.dataTransfer.files\n\n      // Dispatch a `change` event so external code that would rely on the `<input>`\n      // dispatching an event when files are dropped still work.\n      // Use a `CustomEvent` so our events are distinguishable from browser's native events\n      this.$input.dispatchEvent(new CustomEvent('change'))\n\n      this.hideDraggingState()\n    }\n  }\n\n  /**\n   * Check if the value of the underlying input has changed\n   */\n  onChange() {\n    const fileCount = this.$input.files.length\n\n    if (fileCount === 0) {\n      // If there are no files, show the default selection text\n      this.$status.innerText = this.i18n.t('noFileChosen')\n      this.$button.classList.add('govuk-file-upload-button--empty')\n    } else {\n      if (\n        // If there is 1 file, just show the file name\n        fileCount === 1\n      ) {\n        this.$status.innerText = this.$input.files[0].name\n      } else {\n        // Otherwise, tell the user how many files are selected\n        this.$status.innerText = this.i18n.t('multipleFilesChosen', {\n          count: fileCount\n        })\n      }\n\n      this.$button.classList.remove('govuk-file-upload-button--empty')\n    }\n  }\n\n  /**\n   * Looks up the `<label>` element associated to the field\n   *\n   * @private\n   * @returns {HTMLElement} The `<label>` element associated to the field\n   * @throws {ElementError} If the `<label>` cannot be found\n   */\n  findLabel() {\n    // Use `label` in the selector so TypeScript knows the type fo `HTMLElement`\n    const $label = document.querySelector(`label[for=\"${this.$input.id}\"]`)\n\n    if (!$label) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: `Field label (\\`<label for=${this.$input.id}>\\`)`\n      })\n    }\n\n    return $label\n  }\n\n  /**\n   * When the button is clicked, emulate clicking the actual, hidden file input\n   */\n  onClick() {\n    this.$input.click()\n  }\n\n  /**\n   * Create a mutation observer to check if the input's attributes altered.\n   */\n  observeDisabledState() {\n    const observer = new MutationObserver((mutationList) => {\n      for (const mutation of mutationList) {\n        if (\n          mutation.type === 'attributes' &&\n          mutation.attributeName === 'disabled'\n        ) {\n          this.updateDisabledState()\n        }\n      }\n    })\n\n    observer.observe(this.$input, {\n      attributes: true\n    })\n  }\n\n  /**\n   * Synchronise the `disabled` state between the input and replacement button.\n   */\n  updateDisabledState() {\n    this.$button.disabled = this.$input.disabled\n\n    this.$root.classList.toggle(\n      'govuk-drop-zone--disabled',\n      this.$button.disabled\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-file-upload'\n\n  /**\n   * File upload default config\n   *\n   * @see {@link FileUploadConfig}\n   * @constant\n   * @type {FileUploadConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      chooseFilesButton: 'Choose file',\n      dropInstruction: 'or drop file',\n      noFileChosen: 'No file chosen',\n      multipleFilesChosen: {\n        // the 'one' string isn't used as the component displays the filename\n        // instead, however it's here for coverage's sake\n        one: '%{count} file chosen',\n        other: '%{count} files chosen'\n      },\n      enteredDropZone: 'Entered drop zone',\n      leftDropZone: 'Left drop zone'\n    }\n  })\n\n  /**\n   * File upload config schema\n   *\n   * @constant\n   * @satisfies {Schema<FileUploadConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Checks if the given `DataTransfer` contains files\n *\n * @internal\n * @param {DataTransfer} dataTransfer - The `DataTransfer` to check\n * @returns {boolean} - `true` if it contains files or we can't infer it, `false` otherwise\n */\nfunction isContainingFiles(dataTransfer) {\n  // Safari sometimes does not provide info about types :'(\n  // In which case best not to assume anything and try to set the files\n  const hasNoTypesInfo = dataTransfer.types.length === 0\n\n  // When dragging images, there's a mix of mime types + Files\n  // which we can't assign to the native input\n  const isDraggingFiles = dataTransfer.types.some((type) => type === 'Files')\n\n  return hasNoTypesInfo || isDraggingFiles\n}\n\n/**\n * @typedef {HTMLInputElement & {files: FileList}} HTMLFileInputElement\n */\n\n/**\n * File upload config\n *\n * @see {@link FileUpload.defaults}\n * @typedef {object} FileUploadConfig\n * @property {FileUploadTranslations} [i18n=FileUpload.defaults.i18n] - File upload translations\n */\n\n/**\n * File upload translations\n *\n * @see {@link FileUpload.defaults.i18n}\n * @typedef {object} FileUploadTranslations\n *\n * Messages used by the component\n * @property {string} [chooseFile] - The text of the button that opens the file picker\n * @property {string} [dropInstruction] - The text informing users they can drop files\n * @property {TranslationPluralForms} [multipleFilesChosen] - The text displayed when multiple files\n *   have been chosen by the user\n * @property {string} [noFileChosen] - The text to displayed when no file has been chosen by the user\n * @property {string} [enteredDropZone] - The text announced by assistive technology\n *   when user drags files and enters the drop zone\n * @property {string} [leftDropZone] - The text announced by assistive technology\n *   when user drags files and leaves the drop zone without dropping\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n */\n"],"names":["FileUpload","ConfigurableComponent","constructor","$root","config","$input","$button","$status","i18n","id","querySelector","ElementError","component","identifier","type","formatErrorMessage","setAttribute","I18n","locale","closestAttributeValue","$label","findLabel","document","createElement","classList","add","ariaDescribedBy","getAttribute","className","innerText","t","appendChild","commaSpan","containerSpan","buttonSpan","insertAdjacentText","instructionSpan","addEventListener","onClick","bind","event","preventDefault","insertAdjacentElement","onChange","updateDisabledState","observeDisabledState","$announcements","onDrop","updateDropzoneVisibility","enteredAnotherElement","disabled","hideDraggingState","target","Node","contains","dataTransfer","isContainingFiles","showDraggingState","remove","files","dispatchEvent","CustomEvent","fileCount","length","name","count","click","observer","MutationObserver","mutationList","mutation","attributeName","observe","attributes","toggle","moduleName","defaults","Object","freeze","chooseFilesButton","dropInstruction","noFileChosen","multipleFilesChosen","one","other","enteredDropZone","leftDropZone","schema","properties","hasNoTypesInfo","types","isDraggingFiles","some"],"mappings":"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"}