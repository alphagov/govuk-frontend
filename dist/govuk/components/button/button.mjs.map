{"version":3,"file":"button.mjs","sources":["../../../../src/govuk/components/button/button.mjs"],"sourcesContent":["import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n */\nexport class Button extends GOVUKFrontendComponent {\n  /**\n   * @private\n   * @type {ButtonConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($root, config = {}) {\n    super($root)\n\n    this.config = mergeConfigs(\n      Button.defaults,\n      config,\n      normaliseDataset(Button, this.$root.dataset)\n    )\n\n    this.$root.addEventListener('keydown', (event) => this.handleKeyDown(event))\n    this.$root.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.key !== ' ') {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n\n  /**\n   * Button config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    properties: {\n      preventDoubleClick: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n"],"names":["DEBOUNCE_TIMEOUT_IN_SECONDS","Button","GOVUKFrontendComponent","constructor","$root","config","debounceFormSubmitTimer","mergeConfigs","defaults","normaliseDataset","dataset","addEventListener","event","handleKeyDown","debounce","$target","target","key","HTMLElement","getAttribute","preventDefault","click","preventDoubleClick","window","setTimeout","moduleName","Object","freeze","schema","properties","type"],"mappings":";;;;AAIA,MAAMA,2BAA2B,GAAG,CAAC,CAAA;;AAErC;AACA;AACA;AACA;AACA;AACO,MAAMC,MAAM,SAASC,sBAAsB,CAAC;AAajD;AACF;AACA;AACA;AACEC,EAAAA,WAAWA,CAACC,KAAK,EAAEC,MAAM,GAAG,EAAE,EAAE;IAC9B,KAAK,CAACD,KAAK,CAAC,CAAA;AAAA,IAAA,IAAA,CAbdC,MAAM,GAAA,KAAA,CAAA,CAAA;IAAA,IAMNC,CAAAA,uBAAuB,GAAG,IAAI,CAAA;IAS5B,IAAI,CAACD,MAAM,GAAGE,YAAY,CACxBN,MAAM,CAACO,QAAQ,EACfH,MAAM,EACNI,gBAAgB,CAACR,MAAM,EAAE,IAAI,CAACG,KAAK,CAACM,OAAO,CAC7C,CAAC,CAAA;AAED,IAAA,IAAI,CAACN,KAAK,CAACO,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK,IAAI,CAACC,aAAa,CAACD,KAAK,CAAC,CAAC,CAAA;AAC5E,IAAA,IAAI,CAACR,KAAK,CAACO,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK,IAAI,CAACE,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAA;AACvE,GAAA;EAcAC,aAAaA,CAACD,KAAK,EAAE;AACnB,IAAA,MAAMG,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAA;AAG5B,IAAA,IAAIJ,KAAK,CAACK,GAAG,KAAK,GAAG,EAAE;AACrB,MAAA,OAAA;AACF,KAAA;AAGA,IAAA,IACEF,OAAO,YAAYG,WAAW,IAC9BH,OAAO,CAACI,YAAY,CAAC,MAAM,CAAC,KAAK,QAAQ,EACzC;MACAP,KAAK,CAACQ,cAAc,EAAE,CAAA;MACtBL,OAAO,CAACM,KAAK,EAAE,CAAA;AACjB,KAAA;AACF,GAAA;EAaAP,QAAQA,CAACF,KAAK,EAAE;AAEd,IAAA,IAAI,CAAC,IAAI,CAACP,MAAM,CAACiB,kBAAkB,EAAE;AACnC,MAAA,OAAA;AACF,KAAA;IAGA,IAAI,IAAI,CAAChB,uBAAuB,EAAE;MAChCM,KAAK,CAACQ,cAAc,EAAE,CAAA;AACtB,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,IAAI,CAACd,uBAAuB,GAAGiB,MAAM,CAACC,UAAU,CAAC,MAAM;MACrD,IAAI,CAAClB,uBAAuB,GAAG,IAAI,CAAA;AACrC,KAAC,EAAEN,2BAA2B,GAAG,IAAI,CAAC,CAAA;AACxC,GAAA;AA6BF,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AA/HaC,MAAM,CA2FVwB,UAAU,GAAG,cAAc,CAAA;AA3FvBxB,MAAM,CAoGVO,QAAQ,GAAGkB,MAAM,CAACC,MAAM,CAAC;AAC9BL,EAAAA,kBAAkB,EAAE,KAAA;AACtB,CAAC,CAAC,CAAA;AAtGSrB,MAAM,CA8GV2B,MAAM,GAAGF,MAAM,CAACC,MAAM,CAAC;AAC5BE,EAAAA,UAAU,EAAE;AACVP,IAAAA,kBAAkB,EAAE;AAAEQ,MAAAA,IAAI,EAAE,SAAA;AAAU,KAAA;AACxC,GAAA;AACF,CAAC,CAAC;;;;"}