{"version":3,"file":"header.bundle.mjs","sources":["../../../../src/govuk/common/index.mjs","../../../../src/govuk/errors/index.mjs","../../../../src/govuk/govuk-frontend-component.mjs","../../../../src/govuk/components/header/header.mjs"],"sourcesContent":["import { normaliseString } from './normalise-string.mjs'\n\n/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns {{ [key: string]: unknown }} A merged config object\n */\nexport function mergeConfigs(...configObjects) {\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (isObject(option) && isObject(override)) {\n        // @ts-expect-error Index signature for type 'string' is missing\n        formattedConfigObject[key] = mergeConfigs(option, override)\n      } else {\n        // Apply override\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Extracts keys starting with a particular namespace from dataset ('data-*')\n * object, removing the namespace in the process, normalising all values\n *\n * @internal\n * @param {{ schema: Schema }} Component - Component class\n * @param {DOMStringMap} dataset - The object to extract key-value pairs from\n * @param {string} namespace - The namespace to filter keys with\n * @returns {ObjectNested | undefined} Nested object with dot-separated key namespace removed\n */\nexport function extractConfigByNamespace(Component, dataset, namespace) {\n  const property = Component.schema.properties[namespace]\n\n  // Only extract configs for object schema properties\n  if (property?.type !== 'object') {\n    return\n  }\n\n  // Add default empty config\n  const newObject = {\n    [namespace]: /** @type {ObjectNested} */ ({})\n  }\n\n  for (const [key, value] of Object.entries(dataset)) {\n    /** @type {ObjectNested | ObjectNested[NestedKey]} */\n    let current = newObject\n\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n\n    /**\n     * Create new level per part\n     *\n     * e.g. 'i18n.textareaDescription.other' becomes\n     * `{ i18n: { textareaDescription: { other } } }`\n     */\n    for (const [index, name] of keyParts.entries()) {\n      if (typeof current === 'object') {\n        // Drop down to nested object until the last part\n        if (index < keyParts.length - 1) {\n          // New nested object (optionally) replaces existing value\n          if (!isObject(current[name])) {\n            current[name] = {}\n          }\n\n          // Drop down into new or existing nested object\n          current = current[name]\n        } else if (key !== namespace) {\n          // Normalised value (optionally) replaces existing value\n          current[name] = normaliseString(value)\n        }\n      }\n    }\n  }\n\n  return newObject[namespace]\n}\n\n/**\n * Get hash fragment from URL\n *\n * Extract the hash fragment (everything after the hash) from a URL,\n * but not including the hash symbol\n *\n * @private\n * @param {string} url - URL\n * @returns {string | undefined} Fragment from URL, without the hash\n */\nexport function getFragmentFromUrl(url) {\n  if (!url.includes('#')) {\n    return undefined\n  }\n\n  return url.split('#').pop()\n}\n\n/**\n * Get GOV.UK Frontend breakpoint value from CSS custom property\n *\n * @private\n * @param {string} name - Breakpoint name\n * @returns {{ property: string, value?: string }} Breakpoint object\n */\nexport function getBreakpoint(name) {\n  const property = `--govuk-frontend-breakpoint-${name}`\n\n  // Get value from `<html>` with breakpoints on CSS :root\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(property)\n\n  return {\n    property,\n    value: value || undefined\n  }\n}\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * @private\n * @template {HTMLElement} FocusElement\n * @param {FocusElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: FocusElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: FocusElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.addEventListener('blur', onBlur, { once: true })\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    options.onBlur?.call($element)\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus, { once: true })\n\n  // Focus element\n  options.onBeforeFocus?.call($element)\n  $element.focus()\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @internal\n * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  if (!$scope) {\n    return false\n  }\n\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Validate component config by schema\n *\n * Follows limited examples in JSON schema for wider support in future\n *\n * {@link https://ajv.js.org/json-schema.html#compound-keywords}\n * {@link https://ajv.js.org/packages/ajv-errors.html#single-message}\n *\n * @internal\n * @param {Schema} schema - Config schema\n * @param {{ [key: string]: unknown }} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    if (Array.isArray(conditions)) {\n      for (const { required, errorMessage } of conditions) {\n        if (!required.every((key) => !!config[key])) {\n          errors.push(errorMessage) // Missing config key value\n        }\n      }\n\n      // Check one condition passes or add errors\n      if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n        validationErrors.push(...errors)\n      }\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Check for an array\n *\n * @internal\n * @param {unknown} option - Option to check\n * @returns {boolean} Whether the option is an array\n */\nfunction isArray(option) {\n  return Array.isArray(option)\n}\n\n/**\n * Check for an object\n *\n * @internal\n * @param {unknown} option - Option to check\n * @returns {boolean} Whether the option is an object\n */\nfunction isObject(option) {\n  return !!option && typeof option === 'object' && !isArray(option)\n}\n\n/**\n * Schema for component config\n *\n * @typedef {object} Schema\n * @property {{ [field: string]: SchemaProperty | undefined }} properties - Schema properties\n * @property {SchemaCondition[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n\n/**\n * Schema condition for component config\n *\n * @typedef {object} SchemaCondition\n * @property {string[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @internal\n * @typedef {keyof ObjectNested} NestedKey\n * @typedef {{ [key: string]: string | boolean | number | ObjectNested | undefined }} ObjectNested\n */\n","/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @abstract\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  /**\n   * Checks if GOV.UK Frontend is supported on this page\n   *\n   * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n   */\n  constructor($scope = document.body) {\n    const supportMessage =\n      'noModule' in HTMLScriptElement.prototype\n        ? 'GOV.UK Frontend initialised without `<body class=\"govuk-frontend-supported\">` from template `<script>` snippet'\n        : 'GOV.UK Frontend is not supported in this browser'\n\n    super(\n      $scope\n        ? supportMessage\n        : 'GOV.UK Frontend initialised without `<script type=\"module\">`'\n    )\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @internal\n   * @overload\n   * @param {string} message - Element error message\n   */\n\n  /**\n   * @internal\n   * @overload\n   * @param {ElementErrorOptions} options - Element error options\n   */\n\n  /**\n   * @internal\n   * @param {string | ElementErrorOptions} messageOrOptions - Element error message or options\n   */\n  constructor(messageOrOptions) {\n    let message = typeof messageOrOptions === 'string' ? messageOrOptions : ''\n\n    // Build message from options\n    if (typeof messageOrOptions === 'object') {\n      const { componentName, identifier, element, expectedType } =\n        messageOrOptions\n\n      // Add prefix and identifier\n      message = `${componentName}: ${identifier}`\n\n      // Append reason\n      message += element\n        ? ` is not of type ${expectedType ?? 'HTMLElement'}`\n        : ' not found'\n    }\n\n    super(message)\n  }\n}\n\n/**\n * Element error options\n *\n * @internal\n * @typedef {object} ElementErrorOptions\n * @property {string} componentName - The name of the component throwing the error\n * @property {string} identifier - An identifier that'll let the user understand which element has an error. This is whatever makes the most sense\n * @property {Element | null} [element] - The element in error\n * @property {string} [expectedType] - The type that was expected for the identifier\n */\n","import { isSupported } from './common/index.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @internal\n * @abstract\n */\nexport class GOVUKFrontendComponent {\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   */\n  constructor() {\n    this.checkSupport()\n  }\n\n  /**\n   * Validates whether GOV.UK Frontend is supported\n   *\n   * @private\n   * @throws {SupportError} when GOV.UK Frontend is not supported\n   */\n  checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n","import { getBreakpoint } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Header component\n *\n * @preserve\n */\nexport class Header extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $oneLoginMenuButton\n\n  /** @private */\n  $menu\n\n  /** @private */\n  $oneLoginMenu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to big and\n   * back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n  oneLoginMenuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the\n   * browser viewport moves between states.\n   *\n   * @param {Element | null} $module - HTML element to use for header\n   */\n  constructor($module) {\n    super()\n\n    if (!$module) {\n      throw new ElementError({\n        componentName: 'Header',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    const $menuButton = $module.querySelector('.govuk-js-header-toggle')\n    const $oneLoginMenuButton = $module.querySelector(\n      '.govuk-js-one-login-toggle'\n    )\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton && !$oneLoginMenuButton) {\n      return this\n    }\n\n    if ($menuButton) {\n      const menuId = $menuButton.getAttribute('aria-controls')\n      if (!menuId) {\n        throw new ElementError({\n          componentName: 'Header',\n          identifier:\n            'Navigation button (`<button class=\"govuk-js-header-toggle\">`) attribute (`aria-controls`)'\n        })\n      }\n\n      const $menu = document.getElementById(menuId)\n      if (!$menu) {\n        throw new ElementError({\n          componentName: 'Header',\n          element: $menu,\n          identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n        })\n      }\n\n      this.$menu = $menu\n      this.$menuButton = $menuButton\n\n      this.$menuButton.addEventListener('click', () =>\n        this.handleMenuButtonClick()\n      )\n    }\n\n    if ($oneLoginMenuButton) {\n      const menuId = $oneLoginMenuButton.getAttribute('aria-controls')\n      if (!menuId) {\n        throw new ElementError({\n          componentName: 'Header',\n          identifier:\n            'One Login menu button (`<button class=\"govuk-js-one-login-toggle\">`) attribute (`aria-controls`)'\n        })\n      }\n\n      const $oneLoginMenu = document.getElementById(menuId)\n      if (!$oneLoginMenu) {\n        throw new ElementError({\n          componentName: 'Header',\n          element: $oneLoginMenu,\n          identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n        })\n      }\n\n      this.$oneLoginMenu = $oneLoginMenu\n      this.$oneLoginMenuButton = $oneLoginMenuButton\n\n      this.$oneLoginMenuButton.addEventListener('click', () =>\n        this.handleOneLoginMenuButtonClick()\n      )\n    }\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        componentName: 'Header',\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => {\n        this.checkMode()\n        this.checkOneLoginMode()\n      })\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => {\n        this.checkMode()\n        this.checkOneLoginMode()\n      })\n    }\n\n    this.checkMode()\n    this.checkOneLoginMode()\n  }\n\n  /**\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkOneLoginMode() {\n    if (!this.mql || !this.$oneLoginMenu || !this.$oneLoginMenuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$oneLoginMenu.removeAttribute('hidden')\n      this.$oneLoginMenuButton.setAttribute('hidden', '')\n    } else {\n      this.$oneLoginMenuButton.removeAttribute('hidden')\n      this.$oneLoginMenuButton.setAttribute(\n        'aria-expanded',\n        this.oneLoginMenuIsOpen.toString()\n      )\n\n      if (this.oneLoginMenuIsOpen) {\n        this.$oneLoginMenu.removeAttribute('hidden')\n      } else {\n        this.$oneLoginMenu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleOneLoginMenuButtonClick() {\n    this.oneLoginMenuIsOpen = !this.oneLoginMenuIsOpen\n    this.checkOneLoginMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-header'\n}\n"],"names":["getBreakpoint","name","property","value","window","getComputedStyle","document","documentElement","getPropertyValue","undefined","isSupported","$scope","body","classList","contains","GOVUKFrontendError","Error","constructor","args","SupportError","supportMessage","HTMLScriptElement","prototype","ElementError","messageOrOptions","message","componentName","identifier","element","expectedType","GOVUKFrontendComponent","checkSupport","Header","$module","$menuButton","$oneLoginMenuButton","$menu","$oneLoginMenu","menuIsOpen","oneLoginMenuIsOpen","mql","querySelector","menuId","getAttribute","getElementById","addEventListener","handleMenuButtonClick","handleOneLoginMenuButtonClick","setupResponsiveChecks","breakpoint","matchMedia","checkMode","checkOneLoginMode","addListener","matches","removeAttribute","setAttribute","toString","moduleName"],"mappings":"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"}