name: 'RELEASE: Build release'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number eg: 5.3.1'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  build-release:
    name: Build release
    runs-on: Ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Validate version
        uses: actions/github-script@v8.0.0
        with:
          script: |
            const { validateVersion } = await import('${{ github.workspace }}/shared/github-scripts/changelog-release-helper.mjs')
            const frontendPackage = await import('${{ github.workspace }}/packages/govuk-frontend/package.json', { with: { type: 'json' }})

            validateVersion('${{ inputs.version }}', frontendPackage.default.version)

      - name: Update CHANGELOG
        uses: actions/github-script@v8.0.0
        with:
          script: |
            const { updateChangelog } = await import('${{ github.workspace }}/shared/github-scripts/changelog-release-helper.mjs')
            const frontendPackage = await import('${{ github.workspace }}/packages/govuk-frontend/package.json', { with: { type: 'json' }})

            updateChangelog('${{ inputs.version }}', frontendPackage.default.version)

      - name: Update package version
        run: npm version --no-git-tag-version --workspace govuk-frontend ${{ inputs.version }}

      - name: Generate release notes
        uses: actions/github-script@v8.0.0
        with:
          script: |
            const { generateReleaseNotes } = await import('${{ github.workspace }}/shared/github-scripts/changelog-release-helper.mjs')

            generateReleaseNotes('${{ inputs.version }}')

      - name: Build release
        run: npm run build:release

      - name: Create pull request
        env:
          GH_TOKEN: ${{ secrets.CI_PAT }}
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@digital.cabinet-office.gov.uk'
          git add .
          git commit -m "Release ${{ inputs.version }}"
          git checkout -b release-${{ inputs.version }}
          git push -u origin release-${{ inputs.version }}
          gh pr create --base main --head release-${{ inputs.version }} --title "Release ${{ inputs.version }}" --body-file "release-notes-body"
